<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Moorez</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.shenzekun.cn/"/>
  <updated>2018-04-22T03:22:55.417Z</updated>
  <id>http://www.shenzekun.cn/</id>
  
  <author>
    <name>shenzekun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018春招面试总结</title>
    <link href="http://www.shenzekun.cn/2018%E6%98%A5%E6%8B%9B%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.shenzekun.cn/2018春招面试总结.html</id>
    <published>2018-04-20T03:38:42.000Z</published>
    <updated>2018-04-22T03:22:55.417Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>从3月底到4月中旬，经过半个月的面试，终于在4月17号顺利拿到了阿里的 offer，感谢这段时间内面试官、家人和朋友的帮助和鼓励。下面我会总结一些企业关注的点和面试的一些技巧。</p></blockquote><a id="more"></a><h2 id="企业关注的点"><a href="#企业关注的点" class="headerlink" title="企业关注的点"></a>企业关注的点</h2><p>我认为大企业招聘技术实习生或者是应届生时关注有以下几点：</p><ul><li>你的学历（很重要，我腾讯现场二面估计就是挂在这上面，一上来就问我学校的排名😂）</li><li>你的成绩排名</li><li>你的项目经验</li><li>你的比赛奖项（关注会比较少，除非是获得 acm 那种大型比赛）</li><li>对技术是否热情</li><li>你的计算机基础</li><li>你的价值观</li><li>你的性格</li><li>你对当前应聘岗位的知识储备</li><li>沟通能力和团队协作</li><li>是否能够主动去学习新的东西</li></ul><p>在面试时，这些方面都会有所体现。<br>比如问你一些常规性问题（考察你对当前应聘岗位的知识储备）。<br>问你一些计算机基础问题（考察你的计算机基础）。<br>HR 问你一些关于性格优缺点和一些其他问题（考察你的性格和你的价值观）。<br>问你一些场景题（考察你的项目经验）。<br>问你最近看什么书或者你常逛什么技术社区（考察你是否能够主动去学习新的东西和你对技术是否有热情）等等。</p><h2 id="面试技巧"><a href="#面试技巧" class="headerlink" title="面试技巧"></a>面试技巧</h2><p>首先，在面试中，<strong>一定要自信不要紧张</strong>。遇到不会的问题不要慌张，可以将不会的问题转化为自己会的问题。我举个例子，比如面试官问你前端的<code>async</code> 和 <code>await</code> ，那么此时如果你这个不会，那么你可以问一下面试官这个主要是干嘛的，面试官一般都会跟你解释，他告诉你这是异步，那么你就可以往异步的方面靠，这样会让面试官觉得你掌握的还行🙂。</p><p>其次，就是<strong>简历的项目经验和技能一定要写好</strong>，因为面试官会一直问项目的实现，难点，和项目产生的背景。然后会问你在简历上的一些相关技能。个人认为如果不太会的技能就不要写上去。比如我写了<strong>了解</strong>前端安全和性能优化，然后很多面试官就问这个。。。一直问。。。还好准备的比较充分，不然就 gg 了🤣</p><p>最后，在面试时，<strong>千万不要抱怨你的队友，即便队友很水</strong>。我举个反例，有人在 hr 面试时，hr 问他对队友看法，然后他说队友很水，整个项目都是他在写，然后当天就挂了。你想，企业会要背后说别人闲话的人吗？</p><p>最后的最后，面试一定要保持<strong>积极的心态</strong>，就当面试是在自我学习的过程，每次面试都自我反省一下，到底哪些问题回答不好，然后去查缺补漏，这样一定会收获到一个自己满意的 offer 😀</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;从3月底到4月中旬，经过半个月的面试，终于在4月17号顺利拿到了阿里的 offer，感谢这段时间内面试官、家人和朋友的帮助和鼓励。下面我会总结一些企业关注的点和面试的一些技巧。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://www.shenzekun.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="面试" scheme="http://www.shenzekun.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vue全家桶与typescript使用总结</title>
    <link href="http://www.shenzekun.cn/vue%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%B8%8Etypescript%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.shenzekun.cn/vue全家桶与typescript使用总结.html</id>
    <published>2018-03-01T03:38:31.000Z</published>
    <updated>2018-03-01T07:42:08.386Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>最近重构了我之前项目 qq 音乐移动端，使用的技术是 vue，vuex，vue-router，和 typescript，在这期间，遇到的问题还是蛮多的，一会儿我会把我遇到的问题以及解决方法列出来，避免忘记。</p></blockquote><a id="more"></a><p>重构完成的项目 ===&gt; <a href="https://github.com/shenzekun/vue-qq-music" target="_blank" rel="external">vue-qq-music</a></p><p>TypeScript与Vue全家桶的配置可以参考以下两篇文章（在这里由衷感谢两位作者）：</p><ol><li><p><a href="https://segmentfault.com/a/1190000011744210#articleHeader12" target="_blank" rel="external">vue + typescript 新项目起手式</a></p></li><li><p><a href="https://segmentfault.com/a/1190000011864013" target="_blank" rel="external">Vue2.5+ Typescript 引入全面指南 - Vuex篇</a></p></li></ol><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><p>为什么我要将<code>TypeScript</code> 和 <code>Vue</code> 集成呢？因为TypeScript 有以下几个优势：</p><ul><li><strong>可读性</strong>。TypeScript 是 JavaScript 的超集，这意味着他支持所有的 JavaScript 语法。并在此之上对 JavaScript 添加了一些扩展，如interface等。这样会大大提升代码的可阅读性</li><li><strong>静态类型检查</strong>。静态类型检查可以避免很多不必要的错误，不用在调试的时候才发现问题。</li><li><strong>代码提示</strong>。ts 搭配 vscode，代码提示非常友好</li><li><strong>代码重构</strong>。例如全项目更改某个变量名（也可以是类名、方法名，甚至是文件名[重命名文件自动修改的是整个项目的import]），在JS中是不可能的，而TS可以轻松做到。看看下面发生了什么神奇的事情😁⬇️<br><img src="http://ohggtqwxx.bkt.clouddn.com/2018-03-01-ts-chonggou.gif" alt=""></li></ul><h2 id="遇到的问题以及解决方法"><a href="#遇到的问题以及解决方法" class="headerlink" title="遇到的问题以及解决方法"></a>遇到的问题以及解决方法</h2><h3 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h3><p>ts 无法识别$ref</p><p><strong>解决方法</strong><br>① 直接在 this.$refs.xxx 后面申明类型如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.$refs.lyricsLines <span class="keyword">as</span> HTMLDivElement;</div></pre></td></tr></table></figure><p>② 在<code>export default class xxx extends Vue</code>里面声明全部的$ref 的类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$refs: &#123;</div><div class="line">    <span class="attr">audio</span>: HTMLAudioElement,</div><div class="line">    <span class="attr">lyricsLines</span>: HTMLDivElement</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h3><p>ts 无法识别 require</p><p><strong>解决方法</strong></p><p>安装声明文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn add @types/webpack-env -D</div></pre></td></tr></table></figure><h3 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h3><p>运行<code>npm run build</code> 出现<br><img src="http://ohggtqwxx.bkt.clouddn.com/2018-03-01-044916.png" alt=""></p><p><strong>解决方法</strong></p><blockquote><p>You can fix this by <strong>using the most recent beta version</strong> of <code>uglifyjs-webpack-plugin</code>. Our team is working to remove completely the UglifyJsPlugin from within webpack, and instead have it as a standalone plugin.</p><p>If you do <code>yarn add uglifyjs-webpack-plugin@beta --dev</code> or <code>npm install uglifyjs-webpack-plugin@beta --save-dev</code>you should receive the latest beta which does successfully minify es6 syntax. We are hoping to have this released from beta extremely soon, however it should save you from errors for now!</p></blockquote><p>也就是说升级你的uglifyjs-webpack-plugin版本：<br><code>yarn add uglifyjs-webpack-plugin@beta --dev</code></p><h3 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h3><p><a href="https://github.com/kaorun343/vue-property-decorator" target="_blank" rel="external">vue-property-decorator</a> 装饰器写法不对。当时我是要把 mixins，注入到组件里，我就这样写：<br><img src="http://ohggtqwxx.bkt.clouddn.com/2018-03-01-052833.png" alt=""><br>ts提示找不到 mixin。我就很纳闷为什么找不到名字，由于官网vue-property-decorator例子太少，只好一步一步摸索😂</p><p><strong>解决方法</strong></p><p>把mixins写在@Component里面…，像这样：</p><p><img src="http://ohggtqwxx.bkt.clouddn.com/2018-03-01-053215.png" alt=""></p><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ol><li>如果你引用第三方无类型声明的库，那就需要自己编写x.d.ts文件</li><li>如果引用 ui 组件的时候，如果控制台出现<code>Property &#39;$xxx&#39; does not exist on type &#39;App&#39;</code>的话，那么可以在<code>vue-shim.d.ts</code>增加</li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">declare</span> <span class="keyword">module</span> 'vue/types/vue' &#123;</div><div class="line">  <span class="keyword">interface</span> Vue &#123;</div><div class="line">    $xxx: <span class="built_in">any</span>,</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>经过几天的折腾，终于把项目重构完成，我个人认为加上 <code>TypeScript</code>，确实效率挺高了许多，不过 <code>Vue+TypeScript</code> 还是没 <code>Angular</code>支持那么完善，相信之后 vue 对于 ts 的集成会更加完善！</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;最近重构了我之前项目 qq 音乐移动端，使用的技术是 vue，vuex，vue-router，和 typescript，在这期间，遇到的问题还是蛮多的，一会儿我会把我遇到的问题以及解决方法列出来，避免忘记。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://www.shenzekun.cn/tags/vue/"/>
    
      <category term="typescript" scheme="http://www.shenzekun.cn/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>node简单实现一个更改头像功能</title>
    <link href="http://www.shenzekun.cn/node%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%9B%B4%E6%94%B9%E5%A4%B4%E5%83%8F%E5%8A%9F%E8%83%BD.html"/>
    <id>http://www.shenzekun.cn/node简单实现一个更改头像功能.html</id>
    <published>2017-12-28T02:23:05.000Z</published>
    <updated>2017-12-28T06:32:45.716Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一直想写这篇文章，无奈由于要考试的原因，一直在复习，拖延到现在才写🤣，之前用 node 的 express 框架写了个小项目，里面有个上传图片的功能，这里记录一下如何实现（我使用的是 <strong>ejs</strong>）📝</p></blockquote><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p><strong>首先</strong>，当用户点击上传头像，更新头像的时候，将头像上传到项目的一个文件夹里面（<em>我是存放在项目的<code>public/images/img</code>里面</em>），并且将图像名重命名（<em>可以以时间戳来命名</em>）。<img src="http://ohggtqwxx.bkt.clouddn.com/15144357069018.jpg" alt=""></p></li><li><p><strong>同时</strong>图片在项目的路径插入到用户表的当前用户的 <code>userpicturepath</code> 里面</p></li><li>然后更新用户的 session，将图片里面的路径赋值给 session 的里面的<code>picture</code>属性里面</li><li><code>&lt;img&gt;</code> 的 <code>src</code> 获取到当前用户的session里面的 <code>picture</code> 的值，最后动态刷新页面头像就换成了用户上传的头像了</li></ol><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-28-user-upload.gif" alt=""></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>ejs部分</p><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"nav-user-photo"</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="vbscript">&lt;%= user.picture.<span class="built_in">replace</span>(/<span class="keyword">public</span>(\/.*)/, <span class="string">"$1"</span>) %&gt;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">alt</span>=<span class="string">"Photo"</span> <span class="attr">style</span>=<span class="string">"height: 40px;"</span>/&gt;</span></span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"fileInfo"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/png,image/jpg"</span> <span class="attr">id</span>=<span class="string">"picUpload"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"modifyPicV"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure><p>js部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">'#modifyPicV'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</div><div class="line">    formData.append(<span class="string">"file"</span>,$(<span class="string">"input[name='file']"</span>)[<span class="number">0</span>].files[<span class="number">0</span>]);<span class="comment">//把文件对象插到formData对象上</span></div><div class="line">    <span class="built_in">console</span>.log(formData.get(<span class="string">'file'</span>));</div><div class="line">    $.ajax(&#123;</div><div class="line">        <span class="attr">url</span>:<span class="string">'/modifyPic'</span>,</div><div class="line">        <span class="attr">type</span>:<span class="string">'post'</span>,</div><div class="line">        <span class="attr">data</span>: formData,</div><div class="line">        <span class="attr">processData</span>: <span class="literal">false</span>,  <span class="comment">// 不处理数据</span></div><div class="line">        contentType: <span class="literal">false</span>,   <span class="comment">// 不设置内容类型</span></div><div class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            alert(<span class="string">'success'</span>);</div><div class="line">            location.reload();</div><div class="line">        &#125;,</div><div class="line">    &#125;)</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>路由部分，使用<code>formidable</code>，这是一个Node.js模块，用于解析表单数据，尤其是文件上传</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">let</span> router = express.Router();</div><div class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">let</span> &#123;User&#125; = <span class="built_in">require</span>(<span class="string">'../data/db'</span>);</div><div class="line"><span class="keyword">let</span> formidable = <span class="built_in">require</span>(<span class="string">'formidable'</span>);</div><div class="line"><span class="keyword">let</span> cacheFolder = <span class="string">'public/images/'</span>;<span class="comment">//放置路径</span></div><div class="line">router.post(<span class="string">'/modifyPic'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> userDirPath = cacheFolder + <span class="string">"Img"</span>;</div><div class="line">    <span class="keyword">if</span> (!fs.existsSync(userDirPath)) &#123;</div><div class="line">        fs.mkdirSync(userDirPath);<span class="comment">//创建目录</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> form = <span class="keyword">new</span> formidable.IncomingForm(); <span class="comment">//创建上传表单</span></div><div class="line">    form.encoding = <span class="string">'utf-8'</span>; <span class="comment">//设置编码</span></div><div class="line">    form.uploadDir = userDirPath; <span class="comment">//设置上传目录</span></div><div class="line">    form.keepExtensions = <span class="literal">true</span>; <span class="comment">//保留后缀</span></div><div class="line">    form.maxFieldsSize = <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span>; <span class="comment">//文件大小</span></div><div class="line">    form.type = <span class="literal">true</span>;</div><div class="line">    form.parse(req, <span class="function"><span class="keyword">function</span> (<span class="params">err, fields, files</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (err) &#123;</div><div class="line">            <span class="keyword">return</span> res.json(err);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">let</span> extName = <span class="string">''</span>; <span class="comment">//后缀名</span></div><div class="line">        <span class="keyword">switch</span> (files.file.type) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="string">'image/pjpeg'</span>:</div><div class="line">                extName = <span class="string">'jpg'</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'image/jpeg'</span>:</div><div class="line">                extName = <span class="string">'jpg'</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'image/png'</span>:</div><div class="line">                extName = <span class="string">'png'</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'image/x-png'</span>:</div><div class="line">                extName = <span class="string">'png'</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (extName.length === <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> res.json(&#123;</div><div class="line">                <span class="attr">msg</span>: <span class="string">'只支持png和jpg格式图片'</span></div><div class="line">            &#125;);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">let</span> avatarName = <span class="string">'/'</span> + <span class="built_in">Date</span>.now() + <span class="string">'.'</span> + extName;</div><div class="line">            <span class="keyword">let</span> newPath = form.uploadDir + avatarName;</div><div class="line">            fs.renameSync(files.file.path, newPath); <span class="comment">//重命名</span></div><div class="line">            <span class="built_in">console</span>.log(newPath)</div><div class="line">            <span class="comment">//更新表</span></div><div class="line">            User.update(&#123;</div><div class="line">                <span class="attr">picture</span>: newPath</div><div class="line">            &#125;, &#123;</div><div class="line">                <span class="attr">where</span>: &#123;</div><div class="line">                    <span class="attr">username</span>: req.session.user.username</div><div class="line">                &#125;</div><div class="line">            &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">                <span class="keyword">if</span> (data[<span class="number">0</span>] !== <span class="literal">undefined</span>) &#123;</div><div class="line">                    User.findAll(&#123;</div><div class="line">                        <span class="attr">where</span>: &#123;</div><div class="line">                            <span class="attr">username</span>: req.session.user.username</div><div class="line">                        &#125;</div><div class="line">                    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">                        <span class="keyword">if</span> (data[<span class="number">0</span>] !== <span class="literal">undefined</span>) &#123;</div><div class="line">                            req.session.user.picture = data[<span class="number">0</span>].dataValues.picture;</div><div class="line">                            res.send(<span class="literal">true</span>);</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            res.send(<span class="literal">false</span>);</div><div class="line">                        &#125;</div><div class="line">                    &#125;)</div><div class="line">                &#125;</div><div class="line">            &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">                <span class="built_in">console</span>.log(err);</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;一直想写这篇文章，无奈由于要考试的原因，一直在复习，拖延到现在才写🤣，之前用 node 的 express 框架写了个小项目，里面有个上传图片的功能，这里记录一下如何实现（我使用的是 &lt;strong&gt;ejs&lt;/strong&gt;）📝&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="node" scheme="http://www.shenzekun.cn/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>解决 webstrom 上的 babel 编译问题</title>
    <link href="http://www.shenzekun.cn/%E8%A7%A3%E5%86%B3-webstrom-%E4%B8%8A%E7%9A%84-babel-%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.shenzekun.cn/解决-webstrom-上的-babel-编译问题.html</id>
    <published>2017-12-04T23:13:15.000Z</published>
    <updated>2018-01-03T03:48:31.931Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>近日，在写 ejs 文件时，我发现用 vscode 没有啥提示，因此换成 webStrom ，但是用 webStrom 将 es6 编译成 es5 的时候出现了一些问题😭，经过一番搜索， 最后终于成功解决，这里记录一下🖊</p></blockquote><a id="more"></a><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li><p>首先建立一个新的工程，点击<strong>设置</strong></p></li><li><p>在设置里面，把JavaScript language version改成<strong>ECMAScript 6</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-384e088e614a106c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>然后在js文件里写一段ES6代码</p></li><li><p>现在IDE会出现一个<code>File watcher</code>提示条</p></li><li><p>此时先别点Add watcher！</p></li><li><p>在终端切换到项目的路径，输入以下命令</p></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">init</span> -y <span class="comment">//package.json</span></div></pre></td></tr></table></figure><ul><li>安装babel-cli</li></ul><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> babel-cli</div></pre></td></tr></table></figure><ul><li><p>现在可以去点Add watcher，点完之后会弹出一个框</p></li><li><p>下面第三行，<code>Program</code> 那一项，填</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ProjectFileDir</span>$<span class="regexp">/node_modules/</span>.bin<span class="regexp">/babel</span></div></pre></td></tr></table></figure><ul><li><p>然后点OK，这个时候你就会发现左边多出来一个新文件</p></li><li><p>但是现在还没搞定！现在只是搞定了自动转换的功能，系统默认把ES6 编译成了ES6…</p></li><li><p>打开终端，输入：</p></li></ul><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> babel-preset-es2015</div></pre></td></tr></table></figure><ul><li><p>再次打开设置，在搜索框输入<code>file watchers</code>，点击<code>babel</code></p></li><li><p>在 Arguments 里面将 <code>env</code> 改为 <code>=es2015</code>,点击ok<br><img src="http://upload-images.jianshu.io/upload_images/5308475-cd5fda1fb471aa6b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>在根目录下新建一个<code>.babelrc</code>文件（就是babel在当前项目的配置文件），写上：</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"presets"</span>: [</div><div class="line">    <span class="string">"es2015"</span></div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>完成😁</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;近日，在写 ejs 文件时，我发现用 vscode 没有啥提示，因此换成 webStrom ，但是用 webStrom 将 es6 编译成 es5 的时候出现了一些问题😭，经过一番搜索， 最后终于成功解决，这里记录一下🖊&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="工具" scheme="http://www.shenzekun.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="babel" scheme="http://www.shenzekun.cn/tags/babel/"/>
    
  </entry>
  
  <entry>
    <title>解决安装electron卡在node install.js 不动问题</title>
    <link href="http://www.shenzekun.cn/%E8%A7%A3%E5%86%B3%E5%AE%89%E8%A3%85electron%E5%8D%A1%E5%9C%A8node-install-js-%E4%B8%8D%E5%8A%A8%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.shenzekun.cn/解决安装electron卡在node-install-js-不动问题.html</id>
    <published>2017-11-12T23:54:57.000Z</published>
    <updated>2017-11-13T00:00:20.705Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>在安装electron的时候，一直卡在node install.js不动😭，翻了墙也不行，于是在 github 上搜索终于找到解决方法，为此记录下来📝</p></blockquote><a id="more"></a><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>install.js</code>,里面的下载是依赖于<code>electron-download</code>这个模块<br><img src="http://upload-images.jianshu.io/upload_images/5308475-6a5758873a75a2c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>搜索<a href="https://github.com/electron-userland/electron-download" target="_blank" rel="external">electron-download</a>发现：👇</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-0b73ee9483927679.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>打开终端，输入<code>vi ~/.npmrc</code>,在里面添加</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">electron_mirror</span>=<span class="string">"https://npm.taobao.org/mirrors/electron/"</span></div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/5308475-433a4c62d776c545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>再试一次<code>npm install electron -g</code>,这次就成功了😄</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;在安装electron的时候，一直卡在node install.js不动😭，翻了墙也不行，于是在 github 上搜索终于找到解决方法，为此记录下来📝&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://www.shenzekun.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>vscode 前端插件推荐</title>
    <link href="http://www.shenzekun.cn/vscode-%E5%89%8D%E7%AB%AF%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90.html"/>
    <id>http://www.shenzekun.cn/vscode-前端插件推荐.html</id>
    <published>2017-10-30T08:38:04.000Z</published>
    <updated>2017-10-30T14:32:05.000Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="Auto-Close-Tag"><a href="#Auto-Close-Tag" class="headerlink" title="Auto Close Tag"></a>Auto Close Tag</h3><blockquote><p>自动添加HTML / XML关闭标签（必备）</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15092830970499.gif" alt=""></p><h3 id="Auto-Rename-Tag"><a href="#Auto-Rename-Tag" class="headerlink" title="Auto Rename Tag"></a>Auto Rename Tag</h3><blockquote><p>自动重命名配对的HTML / XML标签(必备)</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15092838452118.gif" alt=""></p><h3 id="Beautify"><a href="#Beautify" class="headerlink" title="Beautify"></a>Beautify</h3><blockquote><p>格式化javascript，JSON，CSS，Sass，和HTML</p></blockquote><h3 id="Bootstrap-4-amp-Font-awesome-snippets"><a href="#Bootstrap-4-amp-Font-awesome-snippets" class="headerlink" title="Bootstrap 4 &amp; Font awesome snippets"></a>Bootstrap 4 &amp; Font awesome snippets</h3><blockquote><p>包含Bootstrap 4＆Font awesome 的代码片段</p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fkzg3v9bfnj30rk02ymx1.jpg" alt=""></p><h3 id="Bracket-Pair-Colorizer"><a href="#Bracket-Pair-Colorizer" class="headerlink" title="Bracket Pair Colorizer"></a>Bracket Pair Colorizer</h3><blockquote><p>颜色识别匹配括号</p></blockquote><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fkzg8ththdj30k40500ss.jpg" alt=""></p><h3 id="Class-autocomplete-for-HTML"><a href="#Class-autocomplete-for-HTML" class="headerlink" title="Class autocomplete for HTML"></a>Class autocomplete for HTML</h3><blockquote><p>智能提示HTML class =“”属性（必备）</p></blockquote><h3 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h3><blockquote><p>非常强大的一款插件，能够运行多种语言的代码片段或代码文件：C，C ++，Java，JavaScript，PHP，Python，Perl，Ruby，Go等等，安装完成后，右上角出现：<br><img src="http://ohggtqwxx.bkt.clouddn.com/15092851845587.jpg" alt=""><br>点击这个按钮就可以运行你的文件了（必备）</p></blockquote><h3 id="css-peek"><a href="#css-peek" class="headerlink" title="css peek"></a>css peek</h3><blockquote><p>能够查看CSS ID和类的字符串作为HTML文件中相应的CSS定义（必备）</p></blockquote><p><strong>使用方法</strong>：将光标放在class里面的属性，右击<br><img src="http://ohggtqwxx.bkt.clouddn.com/15092856731870.jpg" alt=""></p><h3 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h3><blockquote><p>查文档必备，搭配 dash（不过似乎只有 mac 版）😁</p><p><strong>快捷键 <code>ctrl + h</code></strong> 它根据你当前选中的语言查找 dash 里面的文档</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/navicat-id-increase.gif" alt=""></p><h3 id="Debugger-for-Chrome"><a href="#Debugger-for-Chrome" class="headerlink" title="Debugger for Chrome"></a>Debugger for Chrome</h3><blockquote><p>让 vscode 映射 chrome 的 debug功能，使静态页面都可以用 vscode 来打断点调试</p></blockquote><p><strong>简单使用</strong>：<a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001470969077294a6455fc9cd1f48b69f82cd05e7fa9b40000" target="_blank" rel="external">戳我</a></p><h3 id="Document-This"><a href="#Document-This" class="headerlink" title="Document This"></a>Document This</h3><blockquote><p>添加注释块</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093400730364.jpg" alt=""></p><p><strong>设置：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"docthis.includeAuthorTag"</span>: <span class="keyword">true</span>,<span class="regexp">//</span>出现<span class="variable">@Author</span></div><div class="line"><span class="string">"docthis.includeDescriptionTag"</span>: <span class="keyword">true</span>,<span class="regexp">//</span>出现<span class="variable">@Description</span></div><div class="line"><span class="string">"docthis.authorName"</span>: <span class="string">"shenzekun"</span>,<span class="regexp">//</span>作者名字</div></pre></td></tr></table></figure><p><strong>快捷键</strong>： 按两次Ctrl+alt+d</p><h3 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h3><blockquote><p>EsLint可以帮助我们检查Javascript编程时的语法错误。比如：在Javascript应用中，你很难找到你漏泄的变量或者方法。EsLint能够帮助我们分析JS代码，找到bug并确保一定程度的JS语法书写的正确性。</p></blockquote><p><strong>配置</strong>：<a href="https://segmentfault.com/a/1190000010462601" target="_blank" rel="external">戳我</a></p><h3 id="Font-awesome-codes-for-html"><a href="#Font-awesome-codes-for-html" class="headerlink" title="Font-awesome codes for html"></a>Font-awesome codes for html</h3><blockquote><p>用于 html 的Font-awesome代码片段</p></blockquote><h3 id="filesize"><a href="#filesize" class="headerlink" title="filesize"></a>filesize</h3><blockquote><p>在底部状态栏显示当前文件大小，点击后还可以看到详细创建、修改时间</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093414045557.jpg" alt=""></p><h3 id="Git-History"><a href="#Git-History" class="headerlink" title="Git History"></a>Git History</h3><blockquote><p>以图表的形式查看git日志<br><img src="http://ohggtqwxx.bkt.clouddn.com/15093254060028.jpg" alt=""></p></blockquote><p>使用 command+shift+p（Ctrl+shift+p） 输入git log就可以看到了</p><h3 id="Git-Lens"><a href="#Git-Lens" class="headerlink" title="Git Lens"></a>Git Lens</h3><blockquote><p>git 日志插件</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093256313651.jpg" alt=""></p><h3 id="HTML-CSS-Support"><a href="#HTML-CSS-Support" class="headerlink" title="HTML CSS Support"></a>HTML CSS Support</h3><blockquote><p>在 html 标签上写class 智能提示当前项目所支持的样式（必备）</p></blockquote><h3 id="HTML-Snippets"><a href="#HTML-Snippets" class="headerlink" title="HTML Snippets"></a>HTML Snippets</h3><blockquote><p>html 代码片段（必备）</p></blockquote><h3 id="htmlhint"><a href="#htmlhint" class="headerlink" title="htmlhint"></a>htmlhint</h3><blockquote><p>html代码检测</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093260108371.jpg" alt=""></p><h3 id="htmltagwrap"><a href="#htmltagwrap" class="headerlink" title="htmltagwrap"></a>htmltagwrap</h3><blockquote><p>可以在选中HTML标签中外面套一层标签</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/vscode-htmltagwrap.gif" alt=""></p><p><strong>使用</strong>：选择一大段代码，然后按“Alt + W”</p><h3 id="Indenticator"><a href="#Indenticator" class="headerlink" title="Indenticator"></a>Indenticator</h3><blockquote><p>突出目前的缩进深度</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/Indenticator.gif" alt=""></p><h3 id="IntelliSense-for-CSS-class-names"><a href="#IntelliSense-for-CSS-class-names" class="headerlink" title="IntelliSense for CSS class names"></a>IntelliSense for CSS class names</h3><p>智能提示 css 的 class 名</p><h3 id="Image-Preview"><a href="#Image-Preview" class="headerlink" title="Image Preview"></a>Image Preview</h3><blockquote><p>鼠标移到路径里显示图像预览</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093708776977.jpg" alt=""></p><h3 id="JavaScript-ES6-code-snippets"><a href="#JavaScript-ES6-code-snippets" class="headerlink" title="JavaScript (ES6) code snippets"></a>JavaScript (ES6) code snippets</h3><blockquote><p>es6代码片段（必备）</p></blockquote><h3 id="JavaScript-Snippet-Pack"><a href="#JavaScript-Snippet-Pack" class="headerlink" title="JavaScript Snippet Pack"></a>JavaScript Snippet Pack</h3><blockquote><p>js代码片段（必备）</p></blockquote><h3 id="jQuery-Code-Snippets"><a href="#jQuery-Code-Snippets" class="headerlink" title="jQuery Code Snippets"></a>jQuery Code Snippets</h3><blockquote><p>jQuery 代码片段</p></blockquote><h3 id="Live-Sass-Compiler"><a href="#Live-Sass-Compiler" class="headerlink" title="Live Sass Compiler"></a>Live Sass Compiler</h3><blockquote><p>实时编译 sass ,不过需要配置，附上我的配置</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">"liveSassCompile.settings.formats"</span>:[</div><div class="line">        <span class="comment">// You can add more</span></div><div class="line">        &#123;</div><div class="line">            <span class="string">"format"</span>: <span class="string">"compressed"</span>,<span class="comment">//压缩</span></div><div class="line">            <span class="string">"extensionName"</span>: <span class="string">".min.css"</span>,<span class="comment">//编译后缀名</span></div><div class="line">            <span class="string">"savePath"</span>: <span class="string">"./css"</span><span class="comment">//编译保存的路径</span></div><div class="line">        &#125;</div><div class="line">    ],</div></pre></td></tr></table></figure><p><strong>使用</strong></p><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093281194279.jpg" alt=""></p><h3 id="markdownlint"><a href="#markdownlint" class="headerlink" title="markdownlint"></a>markdownlint</h3><blockquote><p>markdown 语法检查</p></blockquote><h3 id="Node-js-Modules-Intellisense"><a href="#Node-js-Modules-Intellisense" class="headerlink" title="Node.js Modules Intellisense"></a>Node.js Modules Intellisense</h3><blockquote><p>可以在导入语句中自动完成JavaScript / TypeScript模块。</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/vscode-node.gif" alt=""></p><h3 id="npm-Intellisense"><a href="#npm-Intellisense" class="headerlink" title="npm Intellisense"></a>npm Intellisense</h3><blockquote><p>在导入语句中自动填充npm模块,跟Node.js Modules Intellisense差不多</p></blockquote><h3 id="open-in-browser"><a href="#open-in-browser" class="headerlink" title="open in browser"></a>open in browser</h3><blockquote><p>当前的 html 文件用浏览器打开，类似 webstorm 的那四个小浏览器图标功能，前提条件html 文件必须保存</p></blockquote><p><strong>快捷键alt+b</strong></p><h3 id="Output-Colorizer"><a href="#Output-Colorizer" class="headerlink" title="Output Colorizer"></a>Output Colorizer</h3><blockquote><p>输出提示的文字颜色有一些变化，方便获取关键信息</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093384952721.jpg" alt=""></p><h3 id="Path-Intellisense"><a href="#Path-Intellisense" class="headerlink" title="Path Intellisense"></a>Path Intellisense</h3><blockquote><p>路径自动补全（必备）</p></blockquote><h3 id="Prettier"><a href="#Prettier" class="headerlink" title="Prettier"></a>Prettier</h3><blockquote><p>格式化JavaScript / TypeScript / CSS 。</p></blockquote><h3 id="Project-Manager"><a href="#Project-Manager" class="headerlink" title="Project Manager"></a>Project Manager</h3><blockquote><p>工程项目过多时，shift+cmd+p(shift+ctrl+p) 然后输入project，第一次选择edit Project编辑自己的工程项目，之后就可以直接选择open打开你的项目</p></blockquote><h3 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h3><blockquote><p>写 sass 必备</p></blockquote><h3 id="vscode-faker"><a href="#vscode-faker" class="headerlink" title="vscode-faker"></a>vscode-faker</h3><blockquote><p>生成假数据，地址，电话，图片等等</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/vscode-faker.gif" alt=""></p><p>打开方式shift+cmd+p(shift+ctrl+p)) 然后输入faker 就可以选择了</p><h3 id="Quokka-js"><a href="#Quokka-js" class="headerlink" title="Quokka.js"></a>Quokka.js</h3><blockquote><p>实时观看 javascript 的变量的变化</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/vscode-quokka.gif" alt=""></p><p><strong>使用</strong>：先shift+cmd+p （ctrl+shift+p）输入 quokka 选择 new javascript 就行了😀</p><h3 id="Regex-Previewer"><a href="#Regex-Previewer" class="headerlink" title="Regex Previewer"></a>Regex Previewer</h3><blockquote><p>测试正则的插件</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093406954760.jpg" alt=""></p><h3 id="TSLint"><a href="#TSLint" class="headerlink" title="TSLint"></a>TSLint</h3><blockquote><p>检查typescript编程时的语法错误语法</p></blockquote><h3 id="TypeScript-Importer"><a href="#TypeScript-Importer" class="headerlink" title="TypeScript Importer"></a>TypeScript Importer</h3><blockquote><p>自动搜索工作区文件中的TypeScript定义，并将所有已知符号作为完成项，以允许代码完成。</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/vscode-ts.gif" alt=""></p><h3 id="vscode-icons"><a href="#vscode-icons" class="headerlink" title="vscode-icons"></a>vscode-icons</h3><blockquote><p>目录树图标</p></blockquote><h2 id="react"><a href="#react" class="headerlink" title="react"></a>react</h2><h3 id="React-Native-React-Redux-snippets-for-es6-es7"><a href="#React-Native-React-Redux-snippets-for-es6-es7" class="headerlink" title="React-Native/React/Redux snippets for es6/es7"></a>React-Native/React/Redux snippets for es6/es7</h3><blockquote><p>react代码片段，下载人数超多😉</p></blockquote><h3 id="react-beautify"><a href="#react-beautify" class="headerlink" title="react-beautify"></a>react-beautify</h3><blockquote><p>格式化 javascript, JSX, typescript, TSX 文件</p></blockquote><h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><h3 id="vetur"><a href="#vetur" class="headerlink" title="vetur"></a>vetur</h3><blockquote><p>语法高亮、智能感知</p></blockquote><h3 id="VueHelper"><a href="#VueHelper" class="headerlink" title="VueHelper"></a>VueHelper</h3><blockquote><p>vue代码片段</p></blockquote><h3 id="Vue-TypeScript-Snippets"><a href="#Vue-TypeScript-Snippets" class="headerlink" title="Vue TypeScript Snippets"></a>Vue TypeScript Snippets</h3><blockquote><p>vue的 typescript 代码片段</p></blockquote><h3 id="Vue-2-Snippets"><a href="#Vue-2-Snippets" class="headerlink" title="Vue 2 Snippets"></a>Vue 2 Snippets</h3><blockquote><p>vue 2代码片段</p></blockquote><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="Dracula-Official"><a href="#Dracula-Official" class="headerlink" title="Dracula Official"></a>Dracula Official</h3><p>个人最喜欢的主题，应该是最好看的主题之一😀</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fkzxpf6tevj30l206s74d.jpg" alt=""></p><h3 id="One-Dark-Pro"><a href="#One-Dark-Pro" class="headerlink" title="One Dark Pro"></a>One Dark Pro</h3><p>这个也好看😄</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fkzy0i7rutj30py06yglq.jpg" alt=""></p><h3 id="Atom-One-Dark-Theme-老版本"><a href="#Atom-One-Dark-Theme-老版本" class="headerlink" title="Atom One Dark Theme(老版本)"></a>Atom One Dark Theme(老版本)</h3><p>这个和 One Dark Pro差不多，One Dark Pro颜色主题多一些</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fkzxzhoqkrj30l6062jrl.jpg" alt=""></p><h3 id="One-Monokai-Theme"><a href="#One-Monokai-Theme" class="headerlink" title="One Monokai Theme"></a>One Monokai Theme</h3><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093223049049.jpg" alt=""></p><h3 id="Eva-Theme"><a href="#Eva-Theme" class="headerlink" title="Eva Theme"></a>Eva Theme</h3><p>里面包含黑色和白色主题，这个白色主题感觉挺好看的</p><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093223899355.jpg" alt=""></p><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093223624542.jpg" alt=""></p><h3 id="Boxy-Theme-Kit"><a href="#Boxy-Theme-Kit" class="headerlink" title="Boxy Theme Kit"></a>Boxy Theme Kit</h3><p><img src="http://ohggtqwxx.bkt.clouddn.com/15093265368328.jpg" alt=""></p><hr><p>大家还有什么好的插件推荐吗🤓</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="插件" scheme="http://www.shenzekun.cn/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>js 的 call 与 apply 速度对比</title>
    <link href="http://www.shenzekun.cn/js-%E7%9A%84-call-%E4%B8%8E-apply-%E9%80%9F%E5%BA%A6%E5%AF%B9%E6%AF%94.html"/>
    <id>http://www.shenzekun.cn/js-的-call-与-apply-速度对比.html</id>
    <published>2017-10-20T04:37:57.000Z</published>
    <updated>2017-11-12T23:54:48.466Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近在看 underscore 的源码时发现，作者好多都用 call，而用 apply 比较少，比如说下面这段：👇</p></blockquote><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> optimizeCb = <span class="function"><span class="keyword">function</span>(<span class="params">func, context, argCount</span>) </span>&#123;</div><div class="line">  <span class="comment">// 如果没有指定 this 指向，则返回原函数</span></div><div class="line">  <span class="keyword">if</span> (context === <span class="keyword">void</span> <span class="number">0</span>) <span class="keyword">return</span> func;</div><div class="line"></div><div class="line">  <span class="keyword">switch</span> (argCount == <span class="literal">null</span> ? <span class="number">3</span> : argCount) &#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> func.call(context, value);</div><div class="line">      &#125;;</div><div class="line">    <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">value, other</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> func.call(context, value, other);</div><div class="line">      &#125;;</div><div class="line"></div><div class="line">    <span class="comment">// 如果有指定 this，但没有传入 argCount 参数</span></div><div class="line">    <span class="comment">// 则执行以下 case</span></div><div class="line">    <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">value, index, collection</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> func.call(context, value, index, collection);</div><div class="line">      &#125;;</div><div class="line">    <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">accumulator, value, index, collection</span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> func.call(context, accumulator, value, index, collection);</div><div class="line">      &#125;;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>既然 call 和 apply 都能用，那为什么只用 call 而不用 apply 呢？<br>经过网上的搜索发现，<strong>call 比 apply 速度快</strong>，在 console运行如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">a,b</span>) </span>&#123;&#125;</div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line"><span class="built_in">console</span>.time(<span class="string">"call"</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</div><div class="line">  x.call(<span class="keyword">this</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">"call"</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.time(<span class="string">"apply"</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">1000000</span>; j++) &#123;</div><div class="line">  x.apply(<span class="keyword">this</span>, a);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.timeEnd(<span class="string">"apply"</span>);</div></pre></td></tr></table></figure><p>console的结果：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-2f25092ecb658b17.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>可以发现 call 比 apply 快了10ms 左右，那是什么原因造成这样的呢？<br><strong>因为 apply 运行前要对作为参数的数组进行一系列检验和深拷贝，而 call 则没有</strong><br>我们看一下 ECMAScript 是怎么写的：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-40f7c9167b3a338d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-93025d076479f624.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>由ECMAScript 标准发现 apply 比 call 的步骤多了好多，这就是 call 比 apply 执行速度快的原因！</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近在看 underscore 的源码时发现，作者好多都用 call，而用 apply 比较少，比如说下面这段：👇&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://www.shenzekun.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="js" scheme="http://www.shenzekun.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Vimium 常用快捷键</title>
    <link href="http://www.shenzekun.cn/Vimium-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
    <id>http://www.shenzekun.cn/Vimium-常用快捷键.html</id>
    <published>2017-10-19T10:38:39.000Z</published>
    <updated>2017-11-12T23:54:48.461Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近用了谷歌插件vimium，发现非常好用，牛逼神器一个😄，下面记一下常用的快捷键</p></blockquote><a id="more"></a><p>打开 <code>vimium help</code> 快捷键 shift+/</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8ae19353b092aa14.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><ul><li><strong>j</strong>: 向下移动</li><li><strong>k</strong>: 向上移动</li><li><strong>h</strong>: 左移</li><li><strong>l</strong> : 右移</li><li><strong>d</strong>:向下移动一个页面</li><li><strong>u</strong>:向上移动一个页面</li><li><strong>gg</strong> : 移到页面顶部</li><li><strong>G</strong> : 移到页面底部</li><li><strong>x</strong>:关闭当前标签页</li><li><strong>X</strong>:恢复关闭的标签页</li><li><strong>H</strong>:回到上一个历史页面</li><li><strong>L</strong>:回到下一个历史页面</li><li><strong>J</strong>：跳到左边标签页</li><li><strong>K</strong>：跳到右边标签页</li><li><strong>r</strong> : 刷新</li><li><strong>gs</strong> : 查看网页源码</li><li><strong>yy</strong> : 复制当前页面的 url 到剪切板</li><li><strong>f</strong>: 在当前标签页中打开页面有的链接</li><li><strong>F</strong>:在新标签页中页面有的链接</li><li><strong>p</strong>:在当前标签页中打开剪切板中的链接</li><li><strong>P</strong>:在新的标签页中打开剪切板中的链接</li><li><strong>t</strong>:创建新的标签页(也就是 command+t)</li><li><strong>T</strong>：搜索打开的标签页</li><li><strong>b</strong> : 打开书签</li><li><strong>B</strong> : 在新标签中打开书签</li><li><strong>/</strong> :查找(相当于 command+f)</li><li><strong>i</strong> : 进入输入模式(这个不知道要干嘛的( ⊙o⊙?))</li><li><strong>esc</strong>：退出输入模式</li><li><strong>o</strong> : 在当前页面中打开URL，书签和历史记录</li><li><strong>O</strong> : 在新标签页面中打开URL，书签和历史记录</li><li><strong>gi</strong>：将焦点集中到第一个输入框</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近用了谷歌插件vimium，发现非常好用，牛逼神器一个😄，下面记一下常用的快捷键&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://www.shenzekun.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>前端学习笔记之观察者模式</title>
    <link href="http://www.shenzekun.cn/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html"/>
    <id>http://www.shenzekun.cn/前端学习笔记之观察者模式.html</id>
    <published>2017-10-05T07:05:59.000Z</published>
    <updated>2017-11-12T23:54:48.470Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>观察者模式也称”发布-订阅”模式,它的作用就是当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，自动刷新对象状态</p></blockquote><a id="more"></a><p>举个生活比较常见常见的例子,比如你去面试之后，面试官看你表现不错，最后会跟你要联系方式，以便之后可以联系你。在这角色扮演当中，你就是“订阅者”，面试官就是“发布者”。</p><p>那么发布订阅模式是咋实现的呢？</p><p><strong>思路</strong></p><ol><li>给定一个发布者</li><li>面试者将联系方式给发布者</li><li>发布者的一个列表有各种职位(web端的，java 的)，里面记载回调函数以便通知这些面试者</li><li>最后发布消息的时候，会遍历这个列表的职位的回调函数，告诉面试者面试这个职位是通过还是不通过</li><li>如果面试者取消了订阅，那么将回调函数和之前的回调函数作对比，如果相等，就将这个面试者的上班通知去掉</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Event = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> events = &#123;&#125;; <span class="comment">//发布者</span></div><div class="line"></div><div class="line">  <span class="comment">//subscribe也就是订阅，post 代表面试者要面的职位，callback表示为回调函数</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">subscribe</span>(<span class="params">post, callback</span>) </span>&#123;</div><div class="line">    events[post] = events[post] || []; <span class="comment">//发布者的列表里有没有这个面试职位，如果没有就创建一个空数组</span></div><div class="line">    events[post].push(callback);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">//publish 表示发布</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">publish</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> post = <span class="built_in">Array</span>.prototype.shift.call(<span class="built_in">arguments</span>); <span class="comment">//第一个参数指定“键”</span></div><div class="line">    <span class="keyword">var</span> fns = events[post]; <span class="comment">//设置缓存，提高性能</span></div><div class="line">    <span class="keyword">if</span> (!fns) &#123; <span class="comment">//如果发布者的列表里没有这个职位，那肯定是不能发布</span></div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; fns.length; i++) &#123; <span class="comment">//遍历当前的职位的数组里有几个面试者</span></div><div class="line">      fns[i].apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">//unsubscribe 表示取消订阅</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">unsubscribe</span>(<span class="params">post, fn</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> fns = events[post];</div><div class="line">    <span class="keyword">if</span> (fns) &#123;</div><div class="line">      <span class="keyword">if</span> (fn) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = fns.length; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">          <span class="keyword">if</span> (fns[i] === fn) fns.splice(i, <span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;<span class="comment">//如果没有传入fn回调函数，直接取消post对应消息的所有订阅</span></div><div class="line">        fns = [];</div><div class="line">      &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//如果发布者的列表没有这个职位，直接 return</span></div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">subscribe</span>: subscribe,</div><div class="line">    <span class="attr">publish</span>: publish,</div><div class="line">    <span class="attr">unsubscribe</span>: unsubscribe</div><div class="line">  &#125;;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><p>测试：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fn1 = <span class="function"><span class="keyword">function</span>(<span class="params">time</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"小明你通过了面试，上班时间："</span> + time);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> fn2 = <span class="function"><span class="keyword">function</span>(<span class="params">time</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"小强你通过了面试，上班时间："</span> + time);</div><div class="line">&#125;;</div><div class="line"><span class="comment">//小明将联系方式给了发布者，发布者（hr）觉得小明不错，可以通过，于是在列表(java)里写下了一些回调函数，到时候发布的时候将上班时间告诉小明</span></div><div class="line">Event.subscribe(<span class="string">"java"</span>, fn1);</div><div class="line"><span class="comment">//小强也订阅了</span></div><div class="line">Event.subscribe(<span class="string">"java"</span>, fn2);</div><div class="line"></div><div class="line">Event.publish(<span class="string">"java"</span>, <span class="string">"2017-10-01"</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*输出:</span></div><div class="line">小明你通过了面试，上班时间：2017-10-01</div><div class="line">小强你通过了面试，上班时间：2017-10-01</div><div class="line">*/</div><div class="line"></div><div class="line">Event.unsubscribe(<span class="string">"java"</span>, fn1);<span class="comment">//删除小明的上班通知</span></div><div class="line">Event.publish(<span class="string">"java"</span>, <span class="string">"2017-10-01"</span>);</div><div class="line"></div><div class="line"><span class="comment">/*输出：</span></div><div class="line">小强你通过了面试，上班时间：2017-10-01</div><div class="line">*/</div></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://www.ruanyifeng.com/blog/2012/12/asynchronous%EF%BC%BFjavascript.html" target="_blank" rel="external">Javascript异步编程的4种方法</a><br><a href="https://segmentfault.com/a/1190000007248460" target="_blank" rel="external">js设计模式笔记 - 观察者模式</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;观察者模式也称”发布-订阅”模式,它的作用就是当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，自动刷新对象状态&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="设计模式" scheme="http://www.shenzekun.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>react使用总结</title>
    <link href="http://www.shenzekun.cn/react-%E4%BD%BF%E7%94%A8-%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.shenzekun.cn/react-使用-总结.html</id>
    <published>2017-10-02T07:34:31.000Z</published>
    <updated>2017-11-12T23:54:48.467Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近学了一些 react 和es6 的一些知识，并且使用 react 写了一个 TodoList 项目===&gt;<a href="http://shenzekun.cn/R-Todo/build/index.html" target="_blank" rel="external">预览</a> &amp;&amp; <a href="https://github.com/shenzekun/R-Todo" target="_blank" rel="external">源码</a> 感觉学的挺多的，并且遇到的坑也不少😂，说实话，一开始学 react 看到 jsx 语法有点不适应，说好的结构和行为分离呢😁，不过随着通过一个项目的完成，渐渐明白了这么写的好处</p></blockquote><a id="more"></a><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a><strong>好处</strong></h3><ul><li>自定义标签</li><li>结构清晰</li><li>代码模块化</li><li>更加语义化</li></ul><h3 id="不过也有缺点"><a href="#不过也有缺点" class="headerlink" title="不过也有缺点"></a><strong>不过也有缺点</strong></h3><ul><li>浏览器不支持这语法</li><li>必须通过一大堆工具来转换</li></ul><h3 id="一些需要注意的点"><a href="#一些需要注意的点" class="headerlink" title="一些需要注意的点"></a>一些需要注意的点</h3><p><strong>1. react声明组件时，组件名称必须以大写字母开头如</strong>👉：<code>&lt;Todo /&gt;</code><br><strong>2. 每个标签必须闭合,因为采用的 js+xml 写法，如</strong>👉: <code>&lt;input /&gt;</code><br><strong>3. 组件的返回值只能有一个顶层元素，如</strong>👇：</p><p>下面是错误的：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">render () &#123;</div><div class="line">  return (</div><div class="line">    &lt;div&gt;1&lt;/div&gt;</div><div class="line">    &lt;div&gt;2&lt;/div&gt;</div><div class="line">  )</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>必须这样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">render () &#123;</div><div class="line">  <span class="keyword">return</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  )</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>4. return后面要加一个括号,目的是防止 JavaScript 代码在解析时自动在换行处添加分号</strong>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> renderSquare(i) &#123;</div><div class="line">        <span class="keyword">return</span> (</div><div class="line">          <span class="xml"><span class="tag">&lt;<span class="name">Todo</span> /&gt;</span></span></div><div class="line">        );</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>5. render()里面不能写 class,for,而是要写成<code>className</code>和<code>htmlFor</code>,因为 class ，for 是 javascript 的关键字，因此不能使用，如</strong>：</p><p>下面是错误的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=“xxx”&gt;</div></pre></td></tr></table></figure><p>而是要写 className：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">div</span> className=<span class="string">"xxx"</span>&gt;</div></pre></td></tr></table></figure><p><strong>6. 不要直接更新状态，如</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.state.comment = <span class="string">'Hello'</span>;</div></pre></td></tr></table></figure><p>此代码<strong>不会</strong>重新渲染组件的，之前就这么写，啥反应也没有😂，应该要用<code>setState()</code>:👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.setState(&#123;<span class="attr">comment</span>: <span class="string">'Hello'</span>&#125;);</div></pre></td></tr></table></figure><p>（<strong>注意！！</strong>：构造函数（constructor）是唯一能够初始化 this.state 的地方。）</p><p><strong>7. 使用<code>style</code></strong></p><p>我们在 html 可以这么写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div style=<span class="string">"background-color:red;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure><p>但是在 jsx 里面却不能这么写，必须用两个花括号包裹，并且里面不能写<code>-</code>，要用驼峰形式写，如上面的 <code>background-color</code>写成<code>backgroundColor</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&#123;&#123;<span class="attr">backgroundColor</span>: <span class="string">'red'</span>&#125;&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure><p><strong>8. 关于 setState</strong></p><p>setState方法用于更新当前组件的state状态值，但调用这个方法后，state并不会立即更新，而是在render方法调用后才会更新</p><h3 id="react-特点"><a href="#react-特点" class="headerlink" title="react 特点"></a>react 特点</h3><ol><li><strong>虚拟DOM</strong>: React是以数据驱动的，每次数据变化React都会扫描整个虚拟DOM树，自动计算与上次虚拟DOM的差异变化，然后针对需要变化的部分进行实际的浏览器DOM更新。</li><li><strong>组件化：</strong> React可以从功能角度划分，将UI分解成不同组件，各组件都独立封装，整个UI是由一个个小组件构成的一个大组件，每个组件只关系自身的逻辑，彼此独立（比如你有个按钮，很多页面都有这个按钮，那么就可以把这个按钮封装成该组件）。</li><li><strong>单项数据流</strong>：React只有单向数据流动-从父节点传递到子节点</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近学了一些 react 和es6 的一些知识，并且使用 react 写了一个 TodoList 项目===&amp;gt;&lt;a href=&quot;http://shenzekun.cn/R-Todo/build/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;预览&lt;/a&gt; &amp;amp;&amp;amp; &lt;a href=&quot;https://github.com/shenzekun/R-Todo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源码&lt;/a&gt; 感觉学的挺多的，并且遇到的坑也不少😂，说实话，一开始学 react 看到 jsx 语法有点不适应，说好的结构和行为分离呢😁，不过随着通过一个项目的完成，渐渐明白了这么写的好处&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="react" scheme="http://www.shenzekun.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>解决 webstrom sass 注释中文出错问题</title>
    <link href="http://www.shenzekun.cn/%E8%A7%A3%E5%86%B3-webstrom-sass-%E6%B3%A8%E9%87%8A%E4%B8%AD%E6%96%87%E5%87%BA%E9%94%99%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.shenzekun.cn/解决-webstrom-sass-注释中文出错问题.html</id>
    <published>2017-09-26T23:28:12.000Z</published>
    <updated>2017-11-12T23:54:48.480Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近用 webStrom 写 sass，感觉非常好用，自动帮你编译好，但是有一个问题，就是在写中文注释的时候，就会出错</p></blockquote><a id="more"></a><p>如下：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-95a3cfb869f7aa79.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>网上查了一下，说在 scss 文件头部加上：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</div></pre></td></tr></table></figure><p>但是，我试了一下并不管用！！😂</p><p>经过一番查找终于找到方法，在这里记录一下：</p><p>① 在 scss 文件的头部加上：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</div></pre></td></tr></table></figure><p>② 打开<code>/Library/Ruby/Gems/2.0.0/gems/sass-3.4.22/lib/sass/engine.rb</code>(mac)</p><p>在 require 后面加上：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Encoding<span class="selector-class">.default_external</span> = Encoding.find(<span class="string">'utf-8'</span>)</div></pre></td></tr></table></figure><p>如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-26193cd4cb4b4746.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>现在就可以支持中文注释了😀</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近用 webStrom 写 sass，感觉非常好用，自动帮你编译好，但是有一个问题，就是在写中文注释的时候，就会出错&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://www.shenzekun.cn/tags/css/"/>
    
      <category term="工具" scheme="http://www.shenzekun.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>前端小项目之在线便利贴</title>
    <link href="http://www.shenzekun.cn/%E5%89%8D%E7%AB%AF%E5%B0%8F%E9%A1%B9%E7%9B%AE%E4%B9%8B%E5%9C%A8%E7%BA%BF%E4%BE%BF%E5%88%A9%E8%B4%B4.html"/>
    <id>http://www.shenzekun.cn/前端小项目之在线便利贴.html</id>
    <published>2017-09-13T12:48:33.000Z</published>
    <updated>2017-11-12T23:54:48.471Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="实现的效果如下："><a href="#实现的效果如下：" class="headerlink" title="实现的效果如下："></a>实现的效果如下：</h2><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjhulxqhxuj31kw0j976o.jpg" alt=""></p><p>界面可能不是太好看😁，考虑到容器的高度会被拉长，因此没有用图片做背景。</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><a href="http://note.shenzekun.cn" target="_blank" rel="external">便利贴</a></p><a id="more"></a><h2 id="涉及的知识点"><a href="#涉及的知识点" class="headerlink" title="涉及的知识点"></a>涉及的知识点</h2><ul><li><code>sass</code>(css 预编译器)</li><li><code>webpack</code>（自动化构建工具，实现LESS,CSS,JS编译和压缩代码）</li><li><code>express</code> (基于 Node.js 平台的 web 开发框架)</li><li><code>html+css</code></li><li><code>Node.js</code>(基于 Chrome V8 引擎的 JavaScript 运行环境)</li><li><code>jQuery</code>(一个快速、简洁的JavaScript框架)</li><li><code>sequelize</code>(Node的ORM框架Sequelize操作数据库)</li><li><code>passport</code>(实现第三方登录)</li></ul><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ul><li>github第三方登录</li><li>添加笔记（登录成功后）</li><li>删除笔记</li><li>修改笔记</li><li>使用 markdown(类似 typroa)</li><li>笔记拖拽</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><strong>必要条件</strong>：已经安装好了node环境,还没安装的可以去<a href="http://nodejs.cn/download/" target="_blank" rel="external">node</a>中文官网下载</li><li><strong>小提示</strong>：如果用 npm 下载感觉慢的话，可以下载一个切换镜像源的工具<code>nrm</code>,在终端输入：</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="selector-tag">i</span> nrm -g</div></pre></td></tr></table></figure><p>然后如下操作：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fjhuypg0s6j31co0v6439.jpg" alt=""></p><p><strong>开始！！</strong></p><p>1.<strong>新建一个文件夹，名字自己起，打开终端，切换到自己新建文件夹，如</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> (文件夹名称)</div></pre></td></tr></table></figure><p>2.<strong>生成 <code>package.json</code></strong></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> init -y</div></pre></td></tr></table></figure><p>3.<strong>安装 express</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i <span class="built_in">express</span> --<span class="built_in">save</span></div></pre></td></tr></table></figure><p>4.<strong>安装 <a href="http://www.expressjs.com.cn/starter/generator.html" target="_blank" rel="external">express生成器</a>:</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install <span class="built_in">express</span>-generator --<span class="built_in">save</span></div></pre></td></tr></table></figure><p>5.<strong>生成 ejs 模板（类似 jsp 的写法）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">express <span class="_">-f</span> <span class="_">-e</span></div><div class="line">npm i</div></pre></td></tr></table></figure><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjhv8g9apcj30au0cqq30.jpg" alt=""></p><p>其中<code>public</code>用来存放编译后的js文件以及编译好的css文件等，<code>routes</code>用来存放处理 ajax 的请求文件，views就是存放视图文件<br>然后新建 database 和 src：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fji1acleqhj30ba0k0mxg.jpg" alt=""></p><p>其中 src/js 里面 app 代表不同页面的入口文件，lib 就是一些常用的库，mod 就是你写的一些模块，database 用来存放数据库数据的</p><p>6.<strong>输入：</strong></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> start</div></pre></td></tr></table></figure><p>如果有出现下面的错误：</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fjhvfxr6p3j319i0qq42h.jpg" alt=""></p><p>出现这个错误是因为你没有下载模块，只需在终端输入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="selector-tag">i</span> (模块名) --save</div></pre></td></tr></table></figure><p>就可以了</p><p>7.<strong>打开浏览器，输入<code>localhost:3000</code></strong><br>出现下面这样就说明成功了：</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fjhvj4lwtgj316a0cgjrb.jpg" alt=""></p><p>8.<strong>接下来安装webpack和相关依赖</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm i webpack --<span class="built_in">save</span>-dev</div><div class="line">npm i --<span class="built_in">save</span> css-loader <span class="built_in">style</span>-loader <span class="built_in">express</span>-session <span class="built_in">express</span>-flash node-sass passport sass sass-loader sequelize sqlite3 extract-text-webpack-plugin onchange</div></pre></td></tr></table></figure><p>9.<strong>在 src 里建一个 webpack.config.js，配置如下</strong>：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>)</div><div class="line"><span class="keyword">var</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>);</div><div class="line">    </div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    entry: path.join(__dirname, <span class="string">"js/app/index"</span>),</div><div class="line">    output: &#123;</div><div class="line">        path: path.join(__dirname, <span class="string">"../public"</span>),</div><div class="line">        filename: <span class="string">"js/index.js"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="keyword">module</span>: &#123;</div><div class="line">        rules: [&#123;</div><div class="line">            test: <span class="regexp">/(\.scss)$/</span>,</div><div class="line">            use: ExtractTextPlugin.extract(&#123;</div><div class="line">                fallback: <span class="string">"style-loader"</span>,</div><div class="line">                use: [<span class="string">"css-loader"</span>, <span class="string">"sass-loader"</span>]</div><div class="line">            &#125;) <span class="comment">//把 css 抽离出来生成一个文件</span></div><div class="line">        &#125;]</div><div class="line">    &#125;,</div><div class="line">    resolve: &#123;</div><div class="line">        alias: &#123;</div><div class="line">            jquery: path.join(__dirname, <span class="string">"js/lib/jquery-2.0.3.min.js"</span>),</div><div class="line">            mod: path.join(__dirname, <span class="string">"js/mod"</span>),</div><div class="line">            sass: path.join(__dirname, <span class="string">"sass"</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    plugins: [</div><div class="line">        <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</div><div class="line">            $: <span class="string">"jquery"</span></div><div class="line">        &#125;),</div><div class="line">        <span class="keyword">new</span> ExtractTextPlugin(<span class="string">"css/index.css"</span>),</div><div class="line">        <span class="keyword">new</span> webpack.LoaderOptionsPlugin(&#123;</div><div class="line">            options: &#123;</div><div class="line">                css: [</div><div class="line">                    autoprefixer(),</div><div class="line">                ]</div><div class="line">            &#125;</div><div class="line">        &#125;),</div><div class="line">        <span class="keyword">new</span> webpack.optimize.UglifyJsPlugin(&#123;</div><div class="line">            compress: &#123;</div><div class="line">                warnings: <span class="literal">false</span></div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>说明</p><ul><li>entry:入口文件，也就是 src/js/app里面的index.js,其中__dirname是获得当前文件所在目录的完整目录名</li><li>output:输出编译后的文件 index.js，输出到 public/js 里面</li><li>module：配置Loaders，通过使用不同的loader，webpack有能力调用外部的脚本或工具，实现对不同格式的文件的处理，比如说分析转换scss为css，或者把下一代的JS文件</li><li>resolve.alias：设置模块别名，便于我们更方便引用，比如说我在 js里面的文件需要 jquery，在里面的文件直接写 require(“jquery”) 就行了</li><li><p>如果所有文件都需要 jquery,那么直接在 plugins里面写成这样：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fji3f1ap39j30ik03cglh.jpg" alt=""></p><p>就不需要 require 了</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fji3x6gw2oj30i005q748.jpg" alt=""><br>这个是压缩文件的</p></li></ul><p>10.<strong>在 package.json 中，增加如下两条：</strong><br><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fji3q8xe7tj310i068js2.jpg" alt=""></p><p>写成这样，你在终端就可以写成<code>npm run webpack</code> 来编译文件，<br><code>npm run watch</code>来监控 src 里面的 js 和 scss 的变化，只要一修改，进行编译，提高了效率</p><p>11.<strong>测试</strong></p><p>你可以试试在 js 里面的 index.js写点东西，然后 npm run webpack，如果终端显示是这样：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fji43t9rgej31b20ug0y0.jpg" alt=""></p><p>就证明成功了</p><h2 id="项目思路"><a href="#项目思路" class="headerlink" title="项目思路"></a>项目思路</h2><p>逻辑比较简单</p><ol><li>首先用户必须登录才能添加笔记，当用户失焦的时候，将数据插入数据库，并且重新布局（瀑布流）</li><li>用户不能更改其他用户的笔记，除了管理员😄</li><li>用户更新笔记之后，数据库的数据重新更新，重新布局</li><li>用户可以删除笔记，数据从数据库中删除，重新布局</li><li>用户可以拖拽笔记，但不将位置存入数据库</li></ol><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>html,css就不讲了，可以看看我的<a href="https://github.com/shenzekun/sticky-note" target="_blank" rel="external">源码</a>,主要讲 js。</p><p>1.<strong>瀑布流的实现</strong></p><p>思路：（前提是必须绝对定位）</p><blockquote><ol><li>获取元素的宽度</li><li>通过窗口的宽度除以元素的宽度来获取列数</li><li>初始化一个数组来获取每列的高度，初始化每列的高度为0</li><li>遍历元素，获取最小的的列数的高度和索引，对当前元素进行定位，列数高度加等于当前元素的高度</li></ol></blockquote><p>知道思路后，代码很快就写出来了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> WaterFall = (<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">var</span> $ct, $items;</div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($c)</span> </span>&#123;</div><div class="line">            $ct = $c;</div><div class="line">            $items = $ct.children();</div><div class="line">            <span class="keyword">var</span> nodeWidth = $items.outerWidth(<span class="keyword">true</span>),</div><div class="line">                windowHeight = $(window).height(),</div><div class="line">                colNum = parseInt($(window).width() / nodeWidth), <span class="comment">//获取列数</span></div><div class="line">                colSumHeight = []; <span class="comment">//获取每列的高度</span></div><div class="line">            <span class="comment">//对每列的高度进行初始化</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; colNum; i++) &#123;</div><div class="line">                colSumHeight[i] = <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">            $items.each(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">var</span> $current = $(this);</div><div class="line">                <span class="keyword">var</span> index = <span class="number">0</span>,</div><div class="line">                    minSumHeight = colSumHeight[<span class="number">0</span>];</div><div class="line">                <span class="comment">//获取最小的的列数的高度和索引</span></div><div class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; colSumHeight.length; i++) &#123;</div><div class="line">                    <span class="keyword">if</span> (minSumHeight &gt; colSumHeight[i]) &#123;</div><div class="line">                        index = i;</div><div class="line">                        minSumHeight = colSumHeight[i];</div><div class="line">                    &#125;</div><div class="line">                &#125;            </div><div class="line">                <span class="comment">//改变窗口高度</span></div><div class="line">                <span class="keyword">if</span> (windowHeight &lt; minSumHeight) &#123;</div><div class="line">                    $(<span class="string">"body"</span>).height(minSumHeight);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    $(<span class="string">"body"</span>).height(windowHeight - <span class="number">72</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//对当前元素进行定位</span></div><div class="line">                $current.animate(&#123;</div><div class="line">                    left: nodeWidth * index,</div><div class="line">                    top: minSumHeight</div><div class="line">                &#125;, <span class="number">5</span>);</div><div class="line">                colSumHeight[index] += $current.outerHeight(<span class="keyword">true</span>);</div><div class="line">    </div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//当窗口发生变化时，重新渲染</span></div><div class="line">        $(window).on(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">            render($ct);</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">return</span> &#123;</div><div class="line">            init: render</div><div class="line">        &#125;</div><div class="line">    &#125;)();</div></pre></td></tr></table></figure><p>2.<strong>笔记的拖拽</strong></p><p>我们先看个图</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fji626ceeuj30r40p8t96.jpg" alt=""></p><p>因此代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置笔记的移动</span></div><div class="line">      $noteHead.on(<span class="string">'mousedown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">          <span class="keyword">var</span> evtX = e.pageX - $note.offset().left, <span class="comment">//evtX 计算事件的触发点在 dialog内部到 dialog 的左边缘的距离</span></div><div class="line">              evtY = e.pageY - $note.offset().top;</div><div class="line">          $note.addClass(<span class="string">'draggable'</span>).data(<span class="string">'evtPos'</span>, &#123;</div><div class="line">              <span class="attr">x</span>: evtX,</div><div class="line">              <span class="attr">y</span>: evtY</div><div class="line">          &#125;); <span class="comment">//把事件到 dialog 边缘的距离保存下来</span></div><div class="line">      &#125;).on(<span class="string">'mouseup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">          $note.removeClass(<span class="string">'draggable'</span>).removeData(<span class="string">'pos'</span>);</div><div class="line">      &#125;);</div><div class="line">    </div><div class="line">      $(<span class="string">'body'</span>).on(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">          $(<span class="string">'.draggable'</span>).length &amp;&amp; $(<span class="string">'.draggable'</span>).offset(&#123;</div><div class="line">              <span class="attr">top</span>: e.pageY - $(<span class="string">'.draggable'</span>).data(<span class="string">'evtPos'</span>).y, <span class="comment">// 当用户鼠标移动时，根据鼠标的位置和前面保存的距离，计算 dialog 的绝对位置</span></div><div class="line">              left: e.pageX - $(<span class="string">'.draggable'</span>).data(<span class="string">'evtPos'</span>).x</div><div class="line">          &#125;);</div><div class="line">      &#125;);</div><div class="line">  &#125;,</div></pre></td></tr></table></figure><p>3.<strong>提示模块</strong></p><p>这个比较容易：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* </span></div><div class="line">提示模块</div><div class="line">参数：状态(1表示成功，0表示失败)，消息，出现时间(不写默认是1s)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">toast</span>(<span class="params">status, msg, time</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.status = status;</div><div class="line">    <span class="keyword">this</span>.msg = msg;</div><div class="line">    <span class="keyword">this</span>.time = time || <span class="number">1000</span>;</div><div class="line">    <span class="keyword">this</span>.createToast();</div><div class="line">    <span class="keyword">this</span>.showToast();</div><div class="line">&#125;</div><div class="line"></div><div class="line">toast.prototype = &#123;</div><div class="line">    <span class="attr">createToast</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">var</span> html = <span class="string">'&lt;div class="toast"&gt;&lt;img src="../../imgs/1.png" class="toast_icon"&gt;&lt;/img&gt;&lt;span class="toast_word"&gt;'</span> + <span class="keyword">this</span>.msg + <span class="string">'&lt;/span&gt;&lt;/div&gt;'</span>;</div><div class="line">            <span class="keyword">this</span>.$toast = $(html);</div><div class="line">            $(<span class="string">'body'</span>).append(<span class="keyword">this</span>.$toast);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">var</span> html = <span class="string">'&lt;div class="toast"&gt;&lt;img src="../../imgs/0.png" class="toast_icon"&gt;&lt;/img&gt;&lt;span class="toast_word"&gt;'</span> + <span class="keyword">this</span>.msg + <span class="string">'&lt;/span&gt;&lt;/div&gt;'</span>;</div><div class="line">            <span class="keyword">this</span>.$toast = $(html);</div><div class="line">            $(<span class="string">'body'</span>).append(<span class="keyword">this</span>.$toast);</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">showToast</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>;</div><div class="line">        <span class="keyword">this</span>.$toast.fadeIn(<span class="number">300</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                _this.$toast.fadeOut(<span class="number">300</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                    _this.$toast.remove();</div><div class="line">                &#125;);</div><div class="line">            &#125;, _this.time);</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Toast</span>(<span class="params">status, msg, time</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> toast(status, msg, time);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>4.<strong>笔记模块</strong></p><p>思路：</p><blockquote><ol><li>初始化（如 id，username 等等）</li><li>创建节点</li><li>设置颜色</li><li>绑定事件</li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Note</span>(<span class="params">opts</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.initOpts(opts);</div><div class="line">    <span class="keyword">this</span>.createNode();</div><div class="line">    <span class="keyword">this</span>.setColor();</div><div class="line">    <span class="keyword">this</span>.bind();</div><div class="line">&#125;</div><div class="line"></div><div class="line">Note.prototype = &#123;</div><div class="line">    <span class="attr">colors</span>: [</div><div class="line">        [<span class="string">'#ea9b35'</span>, <span class="string">'#efb04e'</span>], <span class="comment">// headColor, containerColor</span></div><div class="line">        [<span class="string">'#dd598b'</span>, <span class="string">'#e672a2'</span>],</div><div class="line">        [<span class="string">'#c24226'</span>, <span class="string">'#d15a39'</span>],</div><div class="line">        [<span class="string">'#c1c341'</span>, <span class="string">'#d0d25c'</span>],</div><div class="line">        [<span class="string">'#3f78c3'</span>, <span class="string">'#5591d2'</span>]</div><div class="line">    ],</div><div class="line">    <span class="attr">defaultOpts</span>: &#123;</div><div class="line">        <span class="attr">id</span>: <span class="string">''</span>, <span class="comment">//Note的 id</span></div><div class="line">        $ct: $(<span class="string">'#content'</span>).length &gt; <span class="number">0</span> ? $(<span class="string">'#content'</span>) : $(<span class="string">'body'</span>), <span class="comment">//默认存放 Note 的容器</span></div><div class="line">        context: <span class="string">'请输入内容'</span>, <span class="comment">//Note 的内容</span></div><div class="line">        createTime: <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleDateString().replace(<span class="regexp">/\//g</span>, <span class="string">'-'</span>).match(<span class="regexp">/^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/</span>),</div><div class="line">        <span class="attr">username</span>: <span class="string">'admin'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">initOpts</span>: <span class="function"><span class="keyword">function</span> (<span class="params">opts</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.opts = $.extend(&#123;&#125;, <span class="keyword">this</span>.defaultOpts, opts || &#123;&#125;);</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.opts.id) &#123;</div><div class="line">            <span class="keyword">this</span>.id = <span class="keyword">this</span>.opts.id;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>.createTime = <span class="keyword">this</span>.opts.createTime ? <span class="keyword">this</span>.opts.createTime : <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleDateString().replace(<span class="regexp">/\//g</span>, <span class="string">'-'</span>).match(<span class="regexp">/^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/</span>);</div><div class="line">        <span class="keyword">this</span>.username = <span class="keyword">this</span>.opts.username ? <span class="keyword">this</span>.opts.username : <span class="string">'admin'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">createNode</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> tpl = <span class="string">'&lt;div class="note"&gt;'</span> +</div><div class="line">            <span class="string">'&lt;div class="note-head"&gt;&lt;span class="delete"&gt;&amp;times;&lt;/span&gt;&lt;/div&gt;'</span> +</div><div class="line">            <span class="string">'&lt;div class="note-ct" contenteditable="true"&gt;&lt;/div&gt;'</span> +</div><div class="line">            <span class="string">'&lt;div class="note-info"&gt;&lt;div class="note-name"&gt;'</span> + <span class="keyword">this</span>.username + <span class="string">'&lt;/div&gt;&lt;div class="note-time"&gt;'</span> + <span class="keyword">this</span>.createTime + <span class="string">'&lt;/div&gt;'</span> +</div><div class="line">            <span class="string">'&lt;/div&gt;'</span>;</div><div class="line">        <span class="keyword">this</span>.$note = $(tpl);</div><div class="line">        <span class="keyword">this</span>.$note.find(<span class="string">'.note-ct'</span>).html(<span class="keyword">this</span>.opts.context);</div><div class="line">        <span class="keyword">this</span>.opts.$ct.append(<span class="keyword">this</span>.$note);</div><div class="line">        <span class="comment">//if (!this.id) this.$note.css('bottom', '10px'); //新增放到右边</span></div><div class="line">        Event.fire(<span class="string">'waterfall'</span>);</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">setColor</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> color = <span class="keyword">this</span>.colors[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">5</span>)];</div><div class="line">        <span class="keyword">this</span>.$note.find(<span class="string">".note-head"</span>).css(<span class="string">'background-color'</span>, color[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">this</span>.$note.find(<span class="string">'.note-ct'</span>).css(<span class="string">'background-color'</span>, color[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">this</span>.$note.find(<span class="string">'.note-info'</span>).css(<span class="string">'background-color'</span>, color[<span class="number">1</span>]);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">setLayout</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">        <span class="keyword">if</span> (self.clock) &#123;</div><div class="line">            clearTimeout(self.clock);</div><div class="line">        &#125;</div><div class="line">        self.clock = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            Event.fire(<span class="string">'waterfall'</span>);</div><div class="line">        &#125;, <span class="number">100</span>);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">bind</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>, <span class="comment">//记录下坑，之前末尾是分号不是逗号后面都变成了全局变量结果造成了最后一个才能修改😂</span></div><div class="line">            $note = <span class="keyword">this</span>.$note,</div><div class="line">            $noteHead = $note.find(<span class="string">'.note-head'</span>),</div><div class="line">            $noteCt = $note.find(<span class="string">'.note-ct'</span>),</div><div class="line">            $close = $note.find(<span class="string">'.delete'</span>);</div><div class="line"></div><div class="line">        $close.on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            _this.delete();</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        $noteCt.on(<span class="string">'focus'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> ($noteCt.html() === <span class="string">'请输入内容'</span>) $noteCt.html(<span class="string">''</span>);</div><div class="line">            $noteCt.data(<span class="string">'before'</span>, $noteCt.html());</div><div class="line">        &#125;).on(<span class="string">'blur paste'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> ($noteCt.data(<span class="string">'before'</span>) != $noteCt.html()) &#123;</div><div class="line">                $noteCt.data(<span class="string">'before'</span>, $noteCt.html());</div><div class="line">                _this.setLayout();</div><div class="line">                <span class="keyword">if</span> (_this.id) &#123; <span class="comment">//判断是否有这个id，如果有就更新，如果没有就添加</span></div><div class="line">                    _this.edit($noteCt.html())</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    _this.add($noteCt.html())</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        <span class="comment">//设置笔记的移动</span></div><div class="line">        $noteHead.on(<span class="string">'mousedown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> evtX = e.pageX - $note.offset().left, <span class="comment">//evtX 计算事件的触发点在 dialog内部到 dialog 的左边缘的距离</span></div><div class="line">                evtY = e.pageY - $note.offset().top;</div><div class="line">            $note.addClass(<span class="string">'draggable'</span>).data(<span class="string">'evtPos'</span>, &#123;</div><div class="line">                <span class="attr">x</span>: evtX,</div><div class="line">                <span class="attr">y</span>: evtY</div><div class="line">            &#125;); <span class="comment">//把事件到 dialog 边缘的距离保存下来</span></div><div class="line">        &#125;).on(<span class="string">'mouseup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            $note.removeClass(<span class="string">'draggable'</span>).removeData(<span class="string">'pos'</span>);</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        $(<span class="string">'body'</span>).on(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">            $(<span class="string">'.draggable'</span>).length &amp;&amp; $(<span class="string">'.draggable'</span>).offset(&#123;</div><div class="line">                <span class="attr">top</span>: e.pageY - $(<span class="string">'.draggable'</span>).data(<span class="string">'evtPos'</span>).y, <span class="comment">// 当用户鼠标移动时，根据鼠标的位置和前面保存的距离，计算 dialog 的绝对位置</span></div><div class="line">                left: e.pageX - $(<span class="string">'.draggable'</span>).data(<span class="string">'evtPos'</span>).x</div><div class="line">            &#125;);</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/* 添加笔记到数据库 */</span></div><div class="line">    add: <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>;</div><div class="line">        $.post(<span class="string">'/api/notes/add'</span>, &#123;</div><div class="line">            <span class="attr">note</span>: msg</div><div class="line">        &#125;).done(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (res.status === <span class="number">1</span>) &#123;</div><div class="line">                _this.id = res.id;</div><div class="line">                Toast(<span class="number">1</span>, <span class="string">'添加成功！'</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                _this.$note.remove();</div><div class="line">                Event.fire(<span class="string">'waterfall'</span>);</div><div class="line">                Toast(<span class="number">0</span>, res.errorMsg);</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/* 编辑笔记数据库 */</span></div><div class="line">    edit: <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>;</div><div class="line">        $.post(<span class="string">'/api/notes/edit'</span>, &#123;</div><div class="line">            <span class="attr">id</span>: <span class="keyword">this</span>.id,</div><div class="line">            <span class="attr">note</span>: msg</div><div class="line">        &#125;).done(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (res.status === <span class="number">1</span>) &#123;</div><div class="line">                Toast(<span class="number">1</span>, <span class="string">'更新成功！'</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Toast(<span class="number">0</span>, res.errorMsg);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div><div class="line">    <span class="comment">/* 删除笔记 */</span></div><div class="line">    <span class="keyword">delete</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> _this = <span class="keyword">this</span>;</div><div class="line">        <span class="keyword">if</span> (confirm(<span class="string">"确认要删除吗？"</span>)) &#123;</div><div class="line">            $.post(<span class="string">'/api/notes/delete'</span>, &#123;</div><div class="line">                <span class="attr">id</span>: <span class="keyword">this</span>.id</div><div class="line">            &#125;).done(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">                <span class="keyword">if</span> (res.status === <span class="number">1</span>) &#123;</div><div class="line">                    Toast(<span class="number">1</span>, <span class="string">'删除成功！'</span>);</div><div class="line">                    _this.$note.remove();</div><div class="line">                    Event.fire(<span class="string">'waterfall'</span>)</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast(<span class="number">0</span>, res.errorMsg);</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>5.<strong>笔记管理模块</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> NoteManager = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//页面加载</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        $.get(<span class="string">'api/notes'</span>).done(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (res.status === <span class="number">1</span>) &#123;</div><div class="line">                $.each(res.data, <span class="function"><span class="keyword">function</span> (<span class="params">index, msg</span>) </span>&#123;</div><div class="line">                    <span class="keyword">new</span> Note(&#123;</div><div class="line">                        <span class="attr">id</span>: msg.id,</div><div class="line">                        <span class="attr">context</span>: msg.text,</div><div class="line">                        <span class="attr">createTime</span>: msg.createdAt.match(<span class="regexp">/^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/</span>),</div><div class="line">                        <span class="attr">username</span>: msg.username</div><div class="line">                    &#125;);</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">                Event.fire(<span class="string">'waterfall'</span>);</div><div class="line"></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Toast(<span class="number">0</span>, res.errorMsg);</div><div class="line">            &#125;</div><div class="line">        &#125;).fail(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            Toast(<span class="number">0</span>, <span class="string">"网络异常"</span>);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* 添加笔记 */</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        $.get(<span class="string">'/login'</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;<span class="comment">//判断是否登录</span></div><div class="line">            <span class="keyword">if</span> (res.status === <span class="number">1</span>) &#123;</div><div class="line">                <span class="keyword">new</span> Note(&#123;</div><div class="line">                    <span class="attr">username</span>: res.username</div><div class="line">                &#125;);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Toast(<span class="number">0</span>, res.errorMsg);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">load</span>: load,</div><div class="line">        <span class="attr">add</span>: add</div><div class="line">    &#125;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><p>6.<strong>发布订阅模式</strong></p><figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 发布订阅模式 */</span></div><div class="line"><span class="built_in">var</span> Event = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">var</span> events = &#123;&#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">on</span>(<span class="params">evt, handler</span>) </span>&#123;</div><div class="line">        events[evt] = events[evt] || [];</div><div class="line">        events[evt].push(&#123;</div><div class="line">            <span class="attribute">handler</span>: handler</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fire</span>(<span class="params">evt, args</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!events[evt]) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span>; i &lt; events[evt].length; i++) &#123;</div><div class="line">            events[evt][i].handler(args);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">off</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">        <span class="keyword">delete</span> events[name];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attribute">on</span>: <span class="keyword">on</span>,</div><div class="line">        <span class="attribute">fire</span>: fire,</div><div class="line">        <span class="attribute">off</span>: off</div><div class="line">    &#125;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure><p>写完模块后，写入口文件index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'sass/index.scss'</span>);</div><div class="line"><span class="keyword">var</span> Toast = <span class="built_in">require</span>(<span class="string">'mod/toast.js'</span>).Toast;</div><div class="line"><span class="keyword">var</span> WaterFall = <span class="built_in">require</span>(<span class="string">'mod/waterfall.js'</span>);</div><div class="line"><span class="keyword">var</span> NoteManager = <span class="built_in">require</span>(<span class="string">'mod/note-manager'</span>);</div><div class="line"><span class="keyword">var</span> Event = <span class="built_in">require</span>(<span class="string">'mod/event.js'</span>);</div><div class="line"></div><div class="line"></div><div class="line">NoteManager.load();</div><div class="line">$(<span class="string">'.add-note'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    NoteManager.add();</div><div class="line">&#125;)</div><div class="line"></div><div class="line">Event.on(<span class="string">'waterfall'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    WaterFall.init($(<span class="string">"#content"</span>));</div><div class="line">&#125;)</div></pre></td></tr></table></figure><p>到这就差不多完成了70%了，接下来就创建数据库，连接数据库了</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">/*创建数据库 运行 node note.js*/</div><div class="line"></div><div class="line">var Sequelize = <span class="built_in">require</span>(<span class="string">'sequelize'</span>);</div><div class="line">var path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"></div><div class="line">var sequelize = new Sequelize(undefined, undefined, undefined, &#123;</div><div class="line">    host: <span class="string">'localhost'</span>,</div><div class="line">    dialect: <span class="string">'sqlite'</span>,</div><div class="line">    // SQLite only</div><div class="line">    storage: path.join(__dirname, <span class="string">'../database/database.sqlite'</span>)</div><div class="line">&#125;);</div><div class="line"></div><div class="line">/* 测试连接是否成功</div><div class="line">node note.js</div><div class="line"></div><div class="line">sequelize.authenticate()</div><div class="line">    .<span class="keyword">then</span>(() =&gt; &#123;</div><div class="line">        console.log(<span class="string">'Connection has been established successfully.'</span>);</div><div class="line">    &#125;)</div><div class="line">    .catch(err =&gt; &#123;</div><div class="line">        console.<span class="built_in">error</span>(<span class="string">'Unable to connect to the database:'</span>, err);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">*/</div><div class="line"></div><div class="line"></div><div class="line">var Note = sequelize.define(<span class="string">'note'</span>, &#123;</div><div class="line">    text: &#123;</div><div class="line">        <span class="built_in">type</span>: Sequelize.STRING</div><div class="line">    &#125;,</div><div class="line">    userid: &#123;</div><div class="line">        <span class="built_in">type</span>: Sequelize.INTEGER</div><div class="line">    &#125;,</div><div class="line">    username: &#123;</div><div class="line">        <span class="built_in">type</span>: Sequelize.STRING</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">Note.sync();</div><div class="line"></div><div class="line">/*</div><div class="line">删除表</div><div class="line">Note.drop();</div><div class="line">*/</div><div class="line"></div><div class="line"></div><div class="line">/*</div><div class="line">//创建数据库</div><div class="line"></div><div class="line">Note.sync().<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">     Note.create(&#123;text:<span class="string">"sdsdsdsd"</span>&#125;);</div><div class="line">&#125;).<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</div><div class="line">    //查询表</div><div class="line">    Note.findAll(&#123;raw:<span class="keyword">true</span>&#125;).<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">(notes)</span></span>&#123;</div><div class="line">        console.log(notes);</div><div class="line">    &#125;)</div><div class="line">&#125;);</div><div class="line">*/</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Note;</div></pre></td></tr></table></figure><p>然后是在routes 里处理 ajax 请求，处理登录信息，获取 id，用户名等等，到这就基本完成了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>经过一星期的开发，了解了前后端联调，模块化开发方式、webpack 及loader和插件的使用、npm 的使用，Express的使用、路由、中间件、sqlite3、nodejs，在开发过程中还是有遇到许多问题，例如在连续声明变量的时候，不小心把逗号写成了分号，其他变量就变成了全局变量，于是就出错了，查了好久😂<br><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fji7u6i1v0j30jm06y0t6.jpg" alt=""><br>不过在这过程之中还是学到了许多，重要的是过程，继续往前端的路走下去😄</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;实现的效果如下：&quot;&gt;&lt;a href=&quot;#实现的效果如下：&quot; class=&quot;headerlink&quot; title=&quot;实现的效果如下：&quot;&gt;&lt;/a&gt;实现的效果如下：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1fjhulxqhxuj31kw0j976o.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;界面可能不是太好看😁，考虑到容器的高度会被拉长，因此没有用图片做背景。&lt;/p&gt;&lt;h2 id=&quot;预览&quot;&gt;&lt;a href=&quot;#预览&quot; class=&quot;headerlink&quot; title=&quot;预览&quot;&gt;&lt;/a&gt;预览&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://note.shenzekun.cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;便利贴&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="node" scheme="http://www.shenzekun.cn/tags/node/"/>
    
      <category term="js" scheme="http://www.shenzekun.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>解决inline-block元素的bug</title>
    <link href="http://www.shenzekun.cn/%E8%A7%A3%E5%86%B3inline-block%E5%85%83%E7%B4%A0%E7%9A%84bug.html"/>
    <id>http://www.shenzekun.cn/解决inline-block元素的bug.html</id>
    <published>2017-08-30T13:21:53.000Z</published>
    <updated>2017-11-12T23:54:48.482Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>在使用inline-block时，有时候出现的效果莫名奇妙，例如：</p><ul><li>两个inline-block 元素之间如果有空格、回车、tab，那么在页面上就有一个空隙</li><li>两个不同高度的 inline-block 元素顶部无法对齐，或者使用inline-block下面无缘无故多出几像素</li></ul></blockquote><a id="more"></a><h2 id="例子1-出现空隙"><a href="#例子1-出现空隙" class="headerlink" title="例子1,出现空隙"></a>例子1,出现空隙</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-efbd5e22bb492464.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>1.去掉空格</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p><strong>2. 添加父元素，将父元素的 font-size 设置为0，然后在 inline-block 元素中将 font-size 设置为 14px</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-class">.parent</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>:<span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.child</span>&#123;</div><div class="line">      <span class="attribute">font-size</span>:<span class="number">14px</span>;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p><strong>3. 使用<code>margin-right</code></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-class">.child</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">      <span class="attribute">margin-right</span>:-<span class="number">5px</span>;</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p><strong>4. 添加父元素，使用letter-spacing（该属性增加或减少字符间的空白（字符间距））</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-class">.parent</span>&#123;</div><div class="line">      <span class="attribute">letter-spacing</span>:-<span class="number">5px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.child</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p><strong>5. 使用word-spacing （该属性增加或减少单词间的空白（即字间隔））</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-class">.parent</span>&#123;</div><div class="line">      <span class="attribute">word-spacing</span>:-<span class="number">5px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.child</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="解决效果："><a href="#解决效果：" class="headerlink" title="解决效果："></a>解决效果：</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-e11f863d7e7beccc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="例子2，设置inline-block-后，莫名其妙出现一些空白"><a href="#例子2，设置inline-block-后，莫名其妙出现一些空白" class="headerlink" title="例子2，设置inline-block 后，莫名其妙出现一些空白"></a>例子2，设置inline-block 后，莫名其妙出现一些空白</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>span设为inline-block之后下面的空白<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">div</span>&#123;</div><div class="line">      <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="built_in">rgb</span>(202, 43, 43);</div><div class="line">      <span class="attribute">width</span>:<span class="number">250px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">span</span>&#123;</div><div class="line">      <span class="attribute">display</span>:inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">200px</span>;</div><div class="line">      <span class="attribute">height</span>:<span class="number">200px</span>;</div><div class="line">      <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(109, 195, 252);</div><div class="line">      </div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-733a6cd2882f1d23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>使用vertical-align</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>span设为inline-block之后下面的空白<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    div&#123;</div><div class="line">      border:solid 1px rgb(202, 43, 43);</div><div class="line">      width:250px;</div><div class="line">    &#125;</div><div class="line">    span&#123;</div><div class="line">      display:inline-block;</div><div class="line">      width:200px;</div><div class="line">      height:200px;</div><div class="line">      background-color:rgb(109, 195, 252);</div><div class="line">      vertical-align:top;//新增</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="解决效果"><a href="#解决效果" class="headerlink" title="解决效果"></a>解决效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-74787680d7bfab18.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="例子3，两个不同高度的-inline-block-元素顶部无法对齐"><a href="#例子3，两个不同高度的-inline-block-元素顶部无法对齐" class="headerlink" title="例子3，两个不同高度的 inline-block 元素顶部无法对齐"></a>例子3，两个不同高度的 inline-block 元素顶部无法对齐</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    </div><div class="line">    <span class="selector-class">.child1</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">      </div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(109, 195, 252);</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.child2</span>&#123;</div><div class="line">      <span class="attribute">display</span>: inline-block;</div><div class="line">      <span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">      <span class="attribute">height</span>: <span class="number">120px</span>;</div><div class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-3974cddc92207720.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>还是使用vertical-align</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Bin<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">    </div><div class="line">    .child1&#123;</div><div class="line">      display: inline-block;</div><div class="line">      width:100px;</div><div class="line">      height: 100px;</div><div class="line">      vertical-align:top;//新增</div><div class="line">      background-color: rgb(109, 195, 252);</div><div class="line">    &#125;</div><div class="line">    .child2&#123;</div><div class="line">      display: inline-block;</div><div class="line">      width:100px;</div><div class="line">      height: 120px;</div><div class="line">      background-color: rgb(233, 148, 148);</div><div class="line">    &#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  </div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="解决效果-1"><a href="#解决效果-1" class="headerlink" title="解决效果"></a>解决效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/5308475-330207fc3fb88ea6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;在使用inline-block时，有时候出现的效果莫名奇妙，例如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;两个inline-block 元素之间如果有空格、回车、tab，那么在页面上就有一个空隙&lt;/li&gt;&lt;li&gt;两个不同高度的 inline-block 元素顶部无法对齐，或者使用inline-block下面无缘无故多出几像素&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://www.shenzekun.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>浮动</title>
    <link href="http://www.shenzekun.cn/%E6%B5%AE%E5%8A%A8.html"/>
    <id>http://www.shenzekun.cn/浮动.html</id>
    <published>2017-07-01T08:06:44.000Z</published>
    <updated>2017-11-12T23:54:48.476Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近在学浮动的知识，下面总结了一些浮动的一些特征</p></blockquote><a id="more"></a><p><strong>1. 块级元素浮动将并排显示，不再独占一行</strong></p><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">        <span class="selector-class">.box2</span>&#123;</div><div class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">            <span class="attribute">background-color</span>: skyblue;</div><div class="line">        &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>效果：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgtxa48pcyj306m0cowea.jpg" alt=""></p><p>修改：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">        .box2&#123;</div><div class="line">            width: 100px;</div><div class="line">            height: 100px;</div><div class="line">            border: 1px solid #ccc;</div><div class="line">            background-color: skyblue;</div><div class="line">            float: left;/*新增*/</div><div class="line">        &#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure><p>修改效果：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fgtxbxfi9hj30c007gq2q.jpg" alt=""></p><p><strong>2. 内联样式浮动就可以设置宽高，不仅能够支持margin-left(right)，而且也支持margin-top(bottom)</strong></p><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">        *&#123;</div><div class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="selector-class">.box2</span>&#123;</div><div class="line">            <span class="attribute">width</span>: <span class="number">20px</span>;<span class="comment">/*无效*/</span></div><div class="line">            <span class="attribute">height</span>: <span class="number">70px</span>;<span class="comment">/*无效*/</span></div><div class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;<span class="comment">/*无效*/</span></div><div class="line">            <span class="attribute">padding</span>: <span class="number">100px</span> <span class="number">30px</span>;</div><div class="line">            <span class="attribute">background-color</span>: skyblue;</div><div class="line">        &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>效果：</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgtyjzeb3dj307206w0si.jpg" alt=""></p><p>修改：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;style&gt;</div><div class="line">        *&#123;</div><div class="line">            margin: 0;</div><div class="line">            padding: 0;</div><div class="line">        &#125;</div><div class="line">        .box2&#123;</div><div class="line">            width: 20px;/*生效*/</div><div class="line">            height: 70px;/*生效*/</div><div class="line">            border: 1px solid #ccc;</div><div class="line">            margin-top: 20px;/*生效*/</div><div class="line">            padding: 100px 30px;</div><div class="line">            background-color: skyblue;</div><div class="line">            float: left;/*新增*/</div><div class="line">        &#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure><p>修改效果：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgtyq0mmujj30920gk0sk.jpg" alt=""></p><p><strong>3. 浮动元素脱离正常的文档流,普通元素会占据浮动元素的位置</strong></p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgu19u1pbaj31240bwaai.jpg" alt=""></p><p>从上图可以看出，默认三个设置了宽高的<code>block</code>元素，本来会格子独占一行；如果框1设置了向左/向右浮动，他会忽略框2和框3，直到碰到父元素；同时也存在盖住普通元素的风险。</p><p><strong>4. 浮动会导致父元素高度坍塌</strong></p><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border: solid 5px #0e0; width:300px;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100px; width: 100px; background-color: Red;  float:left;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100px; width: 100px; background-color: Green;  float:left;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 100px; width: 100px; background-color: Yellow;  float:left;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>效果：</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgu1fgr312j30hm07et8k.jpg" alt=""></p><p>如上图所示，浮动元素脱离了文档流，并不占据文档流的位置，自然父元素也就不能被撑开，所以没了高度，导致父元素高度坍塌。</p><blockquote><p>浮动元素对父元素的影响</p></blockquote><p>对父容器 若子元素都是浮动元素，则无法撑开父元素高度，父元素失去高度。</p><blockquote><p>浮动元素其他浮动元素的影响</p></blockquote><p>对其他浮动元素，如果包含块太窄，无法完全水平容纳浮动元素，那么其他浮动元素就会向下移动，直到有足够空间。如果浮动元素高度不同，那么向下移动时可能会被卡住。</p><p>示例代码1（块太窄，向下移动）：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> style=<span class="string">"border: solid 5px #0e0; width:250px;"</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 100px; width: 100px; background-color: Red;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 100px; width: 100px; background-color: Green;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 100px; width: 100px; background-color: Yellow;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure><p>效果：</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fgu24kxrizj30eu0ccq2t.jpg" alt=""></p><p>示例代码2（卡住）:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> style=<span class="string">"border: solid 5px #0e0; width:250px;"</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 120px; width: 100px; background-color: Red;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 100px; width: 100px; background-color: Green;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">      &lt;<span class="keyword">div</span> style=<span class="string">"height: 100px; width: 100px; background-color: Yellow;  float:left;"</span>&gt;</div><div class="line">      &lt;/<span class="keyword">div</span>&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure><p>效果：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fgu26lbnj9j30eq0cca9x.jpg" alt=""></p><blockquote><p>浮动元素对普通元素的影响</p></blockquote><p>普通元素会表现得当作浮动元素不存在一样，浮动元素可以覆盖普通元素，如果宽高合适，普通元素可以占据浮动元素原来的位置</p><blockquote><p>对文字的影响</p></blockquote><p>文字(既inline-level)级的元素会环绕浮动元素，表现的像是察觉到浮动元素一样。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近在学浮动的知识，下面总结了一些浮动的一些特征&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://www.shenzekun.cn/tags/css/"/>
    
      <category term="浮动" scheme="http://www.shenzekun.cn/tags/%E6%B5%AE%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo的next主题个性化教程:打造炫酷网站</title>
    <link href="http://www.shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html"/>
    <id>http://www.shenzekun.cn/hexo的next主题个性化配置教程.html</id>
    <published>2017-05-24T13:34:52.000Z</published>
    <updated>2018-04-27T14:48:54.638Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>看到有些next主题的网站很炫酷，那么是怎么配置的呢？接下来我会讲一讲如何实现一些炫酷的效果</p></blockquote><a id="more"></a><p>主要有以下33种：</p><ul><li>在右上角或者左上角实现fork me on github</li><li>添加RSS</li><li>添加动态背景</li><li>实现点击出现桃心效果</li><li>修改文章内链接文本样式</li><li>修改文章底部的那个带#号的标签</li><li>在每篇文章末尾统一添加“本文结束”标记</li><li>修改作者头像并旋转</li><li>博文压缩</li><li>修改``代码块自定义样式</li><li>侧边栏社交小图标设置</li><li>主页文章添加阴影效果</li><li>在网站底部加上访问量</li><li>添加热度</li><li>网站底部字数统计</li><li>添加 README.md 文件</li><li>设置网站的图标Favicon</li><li>实现统计功能</li><li>添加顶部加载条</li><li>在文章底部增加版权信息</li><li>添加网易云跟帖(跟帖关闭，已失效，改为来必力)</li><li>隐藏网页底部powered By Hexo / 强力驱动</li><li>修改网页底部的桃心</li><li>文章加密访问</li><li>添加jiathis分享</li><li>博文置顶</li><li>修改字体大小</li><li>修改打赏字体不闪动</li><li>侧边栏推荐阅读</li><li>自定义鼠标样式</li><li>为博客加上萌萌的宠物</li><li>DaoVoice 在线联系</li><li>点击爆炸效果</li></ul><hr><h1 id="1-在右上角或者左上角实现fork-me-on-github"><a href="#1-在右上角或者左上角实现fork-me-on-github" class="headerlink" title="1. 在右上角或者左上角实现fork me on github"></a>1. 在右上角或者左上角实现fork me on github</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-71cf61436fe2ef27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-733457ecd3fbe289.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>点击<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">这里</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="external">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-96b22eacbe43838c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的github地址<br><img src="http://upload-images.jianshu.io/upload_images/5308475-d2601ad456db064b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="2-添加RSS"><a href="#2-添加RSS" class="headerlink" title="2.添加RSS"></a>2.添加RSS</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-a54daae937107550.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>切换到你的blog（我是取名blog，具体的看你们的取名是什么）的路径，例如我是在<code>/Users/chenzekun/Code/Hexo/blog</code>这个路径上，也就是在你的根目录下<br><img src="http://upload-images.jianshu.io/upload_images/5308475-e8356e1ca05f23a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后安装 Hexo 插件：(这个插件会放在<code>node_modules</code>这个文件夹里)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> <span class="comment">--save hexo-generator-feed</span></div></pre></td></tr></table></figure><p>接下来打开画红线的文件，如下图：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-55f034e749aa8e6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>在里面的末尾添加：(<strong>请注意</strong>在冒号后面要加一个空格，不然会发生错误！)</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http:<span class="comment">//hexo.io/plugins/</span></div><div class="line">plugins: hexo-<span class="keyword">generate</span>-feed</div></pre></td></tr></table></figure><p>然后打开next主题文件夹里面的<code>_config.yml</code>,在里面配置为如下样子：(就是在<code>rss:</code>的后面加上<code>/atom.xml</code>,<strong>注意</strong>在冒号后面要加一个空格)</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># <span class="keyword">Set</span> rss <span class="keyword">to</span> <span class="literal">false</span> <span class="keyword">to</span> disable feed link.</div><div class="line"># Leave rss as <span class="literal">empty</span> <span class="keyword">to</span> use site<span class="comment">'s feed link.</span></div><div class="line"># <span class="keyword">Set</span> rss <span class="keyword">to</span> specific value <span class="keyword">if</span> you have burned your feed already.</div><div class="line">rss: /atom.xml</div></pre></td></tr></table></figure><p>配置完之后运行：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo g</div></pre></td></tr></table></figure><p>重新生成一次，你会在<code>./public</code> 文件夹中看到 <code>atom.xml</code> 文件。然后启动服务器查看是否有效，之后再部署到 Github 中。</p><hr><h1 id="3-添加动态背景"><a href="#3-添加动态背景" class="headerlink" title="3. 添加动态背景"></a>3. 添加动态背景</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-ef603580be708882.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>这个我之前有一篇文章有讲过了，详情点击<a href="http://shenzekun.cn/hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.html" target="_blank" rel="external">我的博客</a></p><hr><h1 id="4-实现点击出现桃心效果"><a href="#4-实现点击出现桃心效果" class="headerlink" title="4. 实现点击出现桃心效果"></a>4. 实现点击出现桃心效果</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>在网址输入如下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span><span class="comment">//7u2ss1.com1.z0.glb.clouddn.com/love.js</span></div></pre></td></tr></table></figure><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><hr><h1 id="5-修改文章内链接文本样式"><a href="#5-修改文章内链接文本样式" class="headerlink" title="5. 修改文章内链接文本样式"></a>5. 修改文章内链接文本样式</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8cc4fc18c399af7e.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式，：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 文章内链接文本样式</span></div><div class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</div><div class="line">  <span class="attribute">border-bottom</span>: none;</div><div class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</div><div class="line">  &amp;:hover &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</div><div class="line">    <span class="attribute">border-bottom</span>: none;</div><div class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><hr><h1 id="6-修改文章底部的那个带-号的标签"><a href="#6-修改文章底部的那个带-号的标签" class="headerlink" title="6. 修改文章底部的那个带#号的标签"></a>6. 修改文章底部的那个带#号的标签</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><hr><h1 id="7-在每篇文章末尾统一添加“本文结束”标记"><a href="#7-在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="7. 在每篇文章末尾统一添加“本文结束”标记"></a>7. 在每篇文章末尾统一添加“本文结束”标记</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">    <span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>代码如下：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></div><div class="line">    <span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'passage-end-tag.swig' %&#125;</span><span class="xml"></span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></div><div class="line"><span class="attr">passage_end_tag:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><hr><h1 id="8-修改作者头像并旋转"><a href="#8-修改作者头像并旋转" class="headerlink" title="8. 修改作者头像并旋转"></a>8. 修改作者头像并旋转</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-e035ce8ac8ea0b5b.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.site-author-image</span> &#123;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</div><div class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</div><div class="line">  <span class="attribute">height</span>: $site-author-image-height;</div><div class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</div><div class="line"></div><div class="line">  <span class="comment">/* 头像圆形 */</span></div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</div><div class="line"></div><div class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></div><div class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</div><div class="line"> </div><div class="line"></div><div class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></div><div class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.0s</span> ease-out;</div><div class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.0s</span> ease-out;</div><div class="line">  <span class="attribute">transition</span>: transform <span class="number">1.0s</span> ease-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></div><div class="line">  -webkit-animation-play-state:paused;</div><div class="line">  animation-play-state:paused;*/</div><div class="line"></div><div class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* Z 轴旋转动画 */</span></div><div class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="9-博文压缩"><a href="#9-博文压缩" class="headerlink" title="9. 博文压缩"></a>9. 博文压缩</h1><p>在站点的根目录下执行以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> gulp -g</div><div class="line">$ npm <span class="keyword">install</span> gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp <span class="comment">--save</span></div></pre></td></tr></table></figure><p>在如下图所示，新建 <code>gulpfile.js</code> ，并填入以下内容：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-bb959c3fb610e69c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</div><div class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</div><div class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</div><div class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</div><div class="line"><span class="comment">// 压缩 public 目录 css</span></div><div class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</div><div class="line">        .pipe(minifycss())</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 压缩 public 目录 html</span></div><div class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</div><div class="line">    .pipe(htmlclean())</div><div class="line">    .pipe(htmlmin(&#123;</div><div class="line">         <span class="attr">removeComments</span>: <span class="literal">true</span>,</div><div class="line">         <span class="attr">minifyJS</span>: <span class="literal">true</span>,</div><div class="line">         <span class="attr">minifyCSS</span>: <span class="literal">true</span>,</div><div class="line">         <span class="attr">minifyURLs</span>: <span class="literal">true</span>,</div><div class="line">    &#125;))</div><div class="line">    .pipe(gulp.dest(<span class="string">'./public'</span>))</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 压缩 public/js 目录 js</span></div><div class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</div><div class="line">        .pipe(uglify())</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></div><div class="line">gulp.task(<span class="string">'default'</span>, [</div><div class="line">    <span class="string">'minify-html'</span>,<span class="string">'minify-css'</span>,<span class="string">'minify-js'</span></div><div class="line">]);</div></pre></td></tr></table></figure><p>生成博文是执行 <code>hexo g &amp;&amp; gulp</code> 就会根据 <code>gulpfile.js</code> 中的配置，对 public 目录中的静态资源文件进行压缩。</p><hr><h1 id="10-修改-代码块自定义样式"><a href="#10-修改-代码块自定义样式" class="headerlink" title="10. 修改``代码块自定义样式"></a>10. 修改``代码块自定义样式</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-e83a6ac00d4d1db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Custom styles.</span></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 大代码块的自定义样式</span></div><div class="line"><span class="selector-class">.highlight</span>, pre &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, pre &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="11-侧边栏社交小图标设置"><a href="#11-侧边栏社交小图标设置" class="headerlink" title="11. 侧边栏社交小图标设置"></a>11. 侧边栏社交小图标设置</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-20e8bba1ad3b343f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>打开主题配置文件（<code>_config.yml</code>），搜索<code>social_icons:</code>,在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-21e22b05edc57b5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="12-主页文章添加阴影效果"><a href="#12-主页文章添加阴影效果" class="headerlink" title="12. 主页文章添加阴影效果"></a>12. 主页文章添加阴影效果</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-21046c442900bf3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 主页文章添加阴影效果</span></div><div class="line"> <span class="selector-class">.post</span> &#123;</div><div class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</div><div class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</div><div class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</div><div class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</div><div class="line">  &#125;</div></pre></td></tr></table></figure><hr><h1 id="13-在网站底部加上访问量"><a href="#13-在网站底部加上访问量" class="headerlink" title="13. 在网站底部加上访问量"></a>13. 在网站底部加上访问量</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-3124557da2b9c75f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong><br>打开<code>\themes\next\layout\_partials\footer.swig</code>文件,在copyright前加上画红线这句话：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-ef8a4643f33fbaa1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>然后再合适的位置添加显示统计的代码，如图：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-bd6fb55b6847d13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"powered-by"</span>&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user-md"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span></div><div class="line">  本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure><p>在这里有两中不同计算方式的统计代码：</p><ol><li><strong>pv</strong>的方式，单个用户连续点击n篇文章，记录n次访问量</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></div><div class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure><ol><li><strong>uv</strong>的方式，单个用户连续点击n篇文章，只记录1次访客数</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></div><div class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure><p>添加之后再执行<code>hexo d -g</code>，然后再刷新页面就能看到效果</p><hr><h1 id="14-添加热度"><a href="#14-添加热度" class="headerlink" title="14. 添加热度"></a>14. 添加热度</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-9bc8a6587cd1a575.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p><strong>next</strong>主题集成<strong>leanCloud</strong>，打开<code>/themes/next/layout/_macro/post.swig</code>,在画红线的区域添加<code>℃</code>：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-f5dbda6888a79dd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>,将画红框的改为热度就可以了<br><img src="http://upload-images.jianshu.io/upload_images/5308475-bd0e1ac5456a2f0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="15-网站底部字数统计"><a href="#15-网站底部字数统计" class="headerlink" title="15. 网站底部字数统计"></a>15. 网站底部字数统计</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-f26f21e2f2b34e18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体方法实现</strong><br>切换到根目录下，然后运行如下代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> hexo-wordcount <span class="comment">--save</span></div></pre></td></tr></table></figure><p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"theme-info"</span>&gt;</div><div class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"powered-by"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div><div class="line">  &lt;span <span class="built_in">class</span>=<span class="string">"post-count"</span>&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</div><div class="line">&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure><hr><h1 id="16-添加-README-md-文件"><a href="#16-添加-README-md-文件" class="headerlink" title="16. 添加 README.md 文件"></a>16. 添加 README.md 文件</h1><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 hexo 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p><p>在 Hexo 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 _<code>config.yml</code>，将 <code>skip_render</code> 参数的值设置为<br></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">skip_render:</span> README.md</div></pre></td></tr></table></figure><p></p><p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 README.md 这个文件了。</p><hr><h1 id="17-设置网站的图标Favicon"><a href="#17-设置网站的图标Favicon" class="headerlink" title="17. 设置网站的图标Favicon"></a>17. 设置网站的图标Favicon</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-da012d2c0586a1e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体方法实现</strong></p><p>在<a href="http://www.easyicon.net/" target="_blank" rel="external">EasyIcon</a>中找一张（32*32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Put your favicon.ico into `hexo-site/source/` directory.</div><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure><hr><h1 id="18-实现统计功能"><a href="#18-实现统计功能" class="headerlink" title="18. 实现统计功能"></a>18. 实现统计功能</h1><p><strong>实现效果图</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-11cf11fe888748a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>在根目录下安装 <code>hexo-wordcount</code>,运行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> hexo-wordcount <span class="comment">--save</span></div></pre></td></tr></table></figure><p>然后在主题的配置文件中，配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Post wordcount display settings</span></div><div class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></div><div class="line"><span class="attr">post_wordcount:</span></div><div class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  min2read:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><hr><h1 id="19-添加顶部加载条"><a href="#19-添加顶部加载条" class="headerlink" title="19. 添加顶部加载条"></a>19. 添加顶部加载条</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-2f5051d9f0352b90.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>/themes/next/layout/_partials/head.swig</code>文件，添加红框上的代码<br><img src="http://upload-images.jianshu.io/upload_images/5308475-72a578a8e3eee672.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div></pre></td></tr></table></figure><p>但是，默认的是粉色的，要改变颜色可以在<code>/themes/next/layout/_partials/head.swig</code>文件中添加如下代码（接在刚才link的后面）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</div><div class="line">        <span class="attribute">background</span>: <span class="number">#1E92FB</span>; <span class="comment">/*进度条颜色*/</span></div><div class="line">        <span class="attribute">height</span>: <span class="number">3px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-progress-inner</span> &#123;</div><div class="line">         <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#1E92FB</span>, <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span>     <span class="number">#1E92FB</span>; <span class="comment">/*阴影颜色*/</span></div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.pace</span> <span class="selector-class">.pace-activity</span> &#123;</div><div class="line">        <span class="attribute">border-top-color</span>: <span class="number">#1E92FB</span>;    <span class="comment">/*上边框颜色*/</span></div><div class="line">        <span class="attribute">border-left-color</span>: <span class="number">#1E92FB</span>;    <span class="comment">/*左边框颜色*/</span></div><div class="line">    &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure><blockquote><p>目前，博主的增加顶部加载条的pull request 已被Merge😀===&gt;<a href="https://github.com/iissnan/hexo-theme-next/pull/1689" target="_blank" rel="external">详情</a><br>现在升级最新版的next主题，升级后只需修改主题配置文件(_config.yml)将<code>pace: false</code>改为<code>pace: true</code>就行了，你还可以换不同样式的加载条，如下图：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-6d44a78e76dbf950.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote><hr><h1 id="20-在文章底部增加版权信息"><a href="#20-在文章底部增加版权信息" class="headerlink" title="20. 在文章底部增加版权信息"></a>20. 在文章底部增加版权信息</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-a264542f53665849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> page.copyright %&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; url_for(page.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 </span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="xml"><span class="tag"><span class="string"> 的个人博客"</span>&gt;</span></span><span class="template-variable">&#123;&#123; theme.author &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="template-variable">&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="template-variable">&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:MM") &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; url_for(page.path) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">title</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; page.title &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; page.permalink &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; page.permalink &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> </span></div><div class="line">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</div><div class="line">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        swal(&#123;   </div><div class="line">          <span class="attr">title</span>: <span class="string">""</span>,   </div><div class="line">          <span class="attr">text</span>: <span class="string">'复制成功'</span>,</div><div class="line">          <span class="attr">icon</span>: <span class="string">"success"</span>, </div><div class="line">          <span class="attr">showConfirmButton</span>: <span class="literal">true</span></div><div class="line">          &#125;);</div><div class="line">	&#125;);</div><div class="line">    &#125;);  </div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">.my_post_copyright &#123;</div><div class="line">  width: 85%;</div><div class="line">  max-width: 45em;</div><div class="line">  margin: 2.8em auto 0;</div><div class="line">  padding: 0.5em 1.0em;</div><div class="line">  border: 1px solid #d3d3d3;</div><div class="line">  font-size: 0.93rem;</div><div class="line">  line-height: 1.6em;</div><div class="line">  word-break: break-all;</div><div class="line">  background: rgba(255,255,255,0.4);</div><div class="line">&#125;</div><div class="line">.my_post_copyright p&#123;margin:0;&#125;</div><div class="line">.my_post_copyright span &#123;</div><div class="line">  display: inline-block;</div><div class="line">  width: 5.2em;</div><div class="line">  color: #b5b5b5;</div><div class="line">  font-weight: bold;</div><div class="line">&#125;</div><div class="line">.my_post_copyright .raw &#123;</div><div class="line">  margin-left: 1em;</div><div class="line">  width: 5em;</div><div class="line">&#125;</div><div class="line">.my_post_copyright a &#123;</div><div class="line">  color: #808080;</div><div class="line">  border-bottom:0;</div><div class="line">&#125;</div><div class="line">.my_post_copyright a:hover &#123;</div><div class="line">  color: #a3d2a3;</div><div class="line">  text-decoration: underline;</div><div class="line">&#125;</div><div class="line">.my_post_copyright:hover .fa-clipboard &#123;</div><div class="line">  color: #000;</div><div class="line">&#125;</div><div class="line">.my_post_copyright .post-url:hover &#123;</div><div class="line">  font-weight: normal;</div><div class="line">&#125;</div><div class="line">.my_post_copyright .copy-path &#123;</div><div class="line">  margin-left: 1em;</div><div class="line">  width: 1em;</div><div class="line">  +mobile()&#123;display:none;&#125;</div><div class="line">&#125;</div><div class="line">.my_post_copyright .copy-path:hover &#123;</div><div class="line">  color: #808080;</div><div class="line">  cursor: pointer;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">      <span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></div><div class="line">        <span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'wechat-subscriber.swig' %&#125;</span><span class="xml"></span></div><div class="line">      <span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">      <span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span><span class="xml"></span></div><div class="line">        <span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'my-copyright.swig' %&#125;</span><span class="xml"></span></div><div class="line">      <span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-769a382b6c9ada3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></div></pre></td></tr></table></figure><p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似：</p><blockquote><p><strong>小技巧</strong>：如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-51f087ce1f1903a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去<br>(<strong>注意</strong>：如果解析出来之后，你的原始链接有问题：如：<code>http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html</code>,那么在根目录下<code>_config.yml</code>中写成类似这样：）<br><img src="http://upload-images.jianshu.io/upload_images/5308475-980129b36907d103.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">就行了。</p></blockquote><hr><h1 id="21-添加网易云跟帖-跟帖关闭，已失效，改为来必力"><a href="#21-添加网易云跟帖-跟帖关闭，已失效，改为来必力" class="headerlink" title="21. 添加网易云跟帖(跟帖关闭，已失效，改为来必力)"></a>21. 添加网易云跟帖(跟帖关闭，已失效，改为来必力)</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-86b212c1221292ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体方法实现</strong><br>有两种实现方法：<br>①更新next主题，因为最新版本的主题已经支持这种评论。直接在主题配置文件<code>_config.yml</code> 文件中添加如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">gentie_productKey:</span> <span class="comment">#your-gentie-product-key</span></div></pre></td></tr></table></figure><p>②如果你不想更新的话，那么按下面步骤进行：<br>首先，还是在主题配置文件<code>_config.yml</code> 文件中添加如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">gentie_productKey:</span> <span class="comment">#your-gentie-product-key</span></div></pre></td></tr></table></figure><p>你的<code>productKey</code>就是下面画红线部分<br><img src="http://upload-images.jianshu.io/upload_images/5308475-2d1eeef55db50cfc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后在在<code>layout/_scripts/third-party/comments/</code> 目录中添加 <code>gentie.swig</code>，文件内容如下：</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id %&#125;</span><span class="xml"></span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> theme.gentie_productKey %&#125;</span><span class="xml"></span></div><div class="line">    <span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> gentie_productKey = theme.gentie_productKey %&#125;</span><span class="xml"></span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">      <span class="keyword">var</span> cloudTieConfig = &#123;</div><div class="line">        <span class="attr">url</span>: <span class="built_in">document</span>.location.href, </div><div class="line">        <span class="attr">sourceId</span>: <span class="string">""</span>,</div><div class="line">        <span class="attr">productKey</span>: <span class="string">"</span><span class="template-variable">&#123;&#123;gentie_productKey&#125;&#125;</span><span class="xml"><span class="undefined">",</span></span></div><div class="line">        target: "cloud-tie-wrapper"</div><div class="line">      &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://img1.ws.126.net/f2e/tie/yun/sdk/loader.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>然后在<code>layout/_scripts/third-party/comments.swig</code>文件中追加：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> './comments/gentie.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>最后，在 <code>layout/_partials/comments.swig</code> 文件中条件最后追加网易云跟帖插件引用的判断逻辑：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.gentie_productKey %&#125;</div><div class="line">      &lt;div id=<span class="string">"cloud-tie-wrapper"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"cloud-tie-wrapper"</span>&gt;</div><div class="line">      <span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure><p>具体位置如下：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-c9199439d2396989.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>可能你<code>hexo s</code>时可能看不到，直接<code>hexo d</code>就可以看到了</p><hr><blockquote><p>近日，我朋友发来消息，说网易云跟帖要关了，我网上查了一下，果然如此</p></blockquote><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1fhdq9vii8pj310k0iqjse.jpg" alt=""></p><blockquote><p>😭都是泪,上次用了多说，结果多说关了，接着是网易云跟帖😷，这次直接用国外的来必力，应该不会这么容易关吧😏</p></blockquote><p>方法其实还是跟上面差不多的</p><p>首先在 <code>_config.yml</code> 文件中添加如下配置：(<strong>注意！如果主题是最新版的，直接写你的liver_uid就行了</strong>)</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Support for LiveRe comments <span class="keyword">system</span>.</div><div class="line"># You can get your uid <span class="keyword">from</span> https:<span class="comment">//livere.com/insight/myCode (General web site)</span></div><div class="line">livere_uid: your uid</div></pre></td></tr></table></figure><p>其中，<code>livere_uid</code>就是画红线的部分<br><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fhdqgyeu2fj30ms02yglr.jpg" alt=""></p><p>然后在 <code>layout/_scripts/third-party/comments/</code> 目录中添加 livere.swig，文件内容如下：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;</span><span class="xml"></span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.livere_uid %&#125;</span><span class="xml"></span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">      (<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> j, e = d.getElementsByTagName(s)[<span class="number">0</span>];</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">'function'</span>) &#123; <span class="keyword">return</span>; &#125;</div><div class="line">        j = d.createElement(s);</div><div class="line">        j.src = <span class="string">'https://cdn-city.livere.com/js/embed.dist.js'</span>;</div><div class="line">        j.async = <span class="literal">true</span>;</div><div class="line">        e.parentNode.insertBefore(j, e);</div><div class="line">      &#125;)(<span class="built_in">document</span>, <span class="string">'script'</span>);</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>然后在 <code>layout/_scripts/third-party/comments.swig</code>文件中追加：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> './comments/livere.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>最后，在 <code>layout/_partials/comments.swig</code> 文件中条件最后追加 LiveRe 插件是否引用的判断逻辑：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">elseif</span> theme.livere_uid %&#125;</span><span class="xml"></span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; theme.livere_uid &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>完</p><hr><h1 id="22-隐藏网页底部powered-By-Hexo-强力驱动"><a href="#22-隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="22. 隐藏网页底部powered By Hexo / 强力驱动"></a>22. 隐藏网页底部powered By Hexo / 强力驱动</h1><p>打开<code>themes/next/layout/_partials/footer.swig</code>,使用””隐藏之间的代码即可，或者直接删除。位置如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8e8340c7a0489bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="23-修改网页底部的桃心"><a href="#23-修改网页底部的桃心" class="headerlink" title="23. 修改网页底部的桃心"></a>23. 修改网页底部的桃心</h1><p>还是打开<code>themes/next/layout/_partials/footer.swig</code>，找到：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-f6355823aef7f723.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">，然后还是在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">图标库</a>中找到你自己喜欢的图标，然后修改画红线的部分就可以了。</p><hr><h1 id="24-文章加密访问"><a href="#24-文章加密访问" class="headerlink" title="24. 文章加密访问"></a>24. 文章加密访问</h1><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-0c7e5e61b78dc937.gif?imageMogr2/auto-orient/strip" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-446793cd6d740b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">    (<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</div><div class="line">                alert(<span class="string">'密码错误！'</span>);</div><div class="line">                <span class="keyword">if</span> (history.length === <span class="number">1</span>) &#123;</div><div class="line">                    location.replace(<span class="string">"http://xxxxxxx.xxx"</span>); <span class="comment">// 这里替换成你的首页</span></div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    history.back();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;)();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>然后在文章上写成类似这样：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-e6c726a0152cb8ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="25-添加jiathis分享"><a href="#25-添加jiathis分享" class="headerlink" title="25. 添加jiathis分享"></a>25. 添加jiathis分享</h1><p>在<strong>主题配置文件</strong>中，jiathis为true，就行了，如下图</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-f381bc9e7c73b1e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>默认是这样子的：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-a88228b9ea43ab2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>如果你想自定义话，打开<code>themes/next/layout/_partials/share/jiathis.swig</code>修改画红线部分就可以了<br><img src="http://upload-images.jianshu.io/upload_images/5308475-68c51498744e1636.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><hr><h1 id="26-博文置顶"><a href="#26-博文置顶" class="headerlink" title="26. 博文置顶"></a>26. 博文置顶</h1><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</div><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</div><div class="line">  <span class="keyword">var</span> posts = locals.posts;</div><div class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></div><div class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></div><div class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></div><div class="line">    &#125;);</div><div class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</div><div class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</div><div class="line">    <span class="attr">perPage</span>: config.index_generator.per_page,</div><div class="line">    <span class="attr">layout</span>: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</div><div class="line">    <span class="attr">format</span>: paginationDir + <span class="string">'/%d/'</span>,</div><div class="line">    <span class="attr">data</span>: &#123;</div><div class="line">      <span class="attr">__index</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>在文章中添加 <code>top</code> 值，数值越大文章越靠前，如</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> 解决Charles乱码问题</div><div class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-05</span><span class="bullet">-22</span> <span class="number">22</span>:<span class="number">45</span>:<span class="number">48</span></div><div class="line"><span class="attr">tags:</span> 技巧</div><div class="line"><span class="attr">categories:</span> 技巧</div><div class="line"><span class="attr">copyright:</span> <span class="literal">true</span></div><div class="line"><span class="attr">top:</span> <span class="number">100</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure><hr><h1 id="27-修改字体大小"><a href="#27-修改字体大小" class="headerlink" title="27. 修改字体大小"></a>27. 修改字体大小</h1><p>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，将<code>$font-size-base</code>改成<code>16px</code>，如下所示：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$font</span>-size-base            =16px</span></div></pre></td></tr></table></figure><hr><h1 id="28-修改打赏字体不闪动"><a href="#28-修改打赏字体不闪动" class="headerlink" title="28. 修改打赏字体不闪动"></a>28. 修改打赏字体不闪动</h1><p>修改文件<code>next/source/css/_common/components/post/post-reward.styl</code>，然后注释其中的函数<code>wechat:hover</code>和<code>alipay:hover</code>，如下：</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 注释文字闪动函数</span></div><div class="line"> #wechat:hover p&#123;</div><div class="line">    animation: roll 0.1s infinite linear;</div><div class="line">    -<span class="ruby">webkit-<span class="symbol">animation:</span> roll <span class="number">0</span>.<span class="number">1</span>s infinite linear;</span></div><div class="line">    -<span class="ruby">moz-<span class="symbol">animation:</span> roll <span class="number">0</span>.<span class="number">1</span>s infinite linear;</span></div><div class="line">&#125;</div><div class="line"> #alipay:hover p&#123;</div><div class="line">   animation: roll 0.1s infinite linear;</div><div class="line">    -<span class="ruby">webkit-<span class="symbol">animation:</span> roll <span class="number">0</span>.<span class="number">1</span>s infinite linear;</span></div><div class="line">    -<span class="ruby">moz-<span class="symbol">animation:</span> roll <span class="number">0</span>.<span class="number">1</span>s infinite linear;</span></div><div class="line">&#125;</div><div class="line">*/</div></pre></td></tr></table></figure><hr><h1 id="29-侧边栏推荐阅读"><a href="#29-侧边栏推荐阅读" class="headerlink" title="29. 侧边栏推荐阅读"></a>29. 侧边栏推荐阅读</h1><p>今天有位网友问推荐阅读是怎么弄，其实挺简单的，打开主题配置文件修改成这样就行了(links里面写你想要的链接):</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Blogrolls</span></div><div class="line"><span class="symbol">links_title:</span> 推荐阅读</div><div class="line"><span class="meta">#links_layout: block</span></div><div class="line"><span class="symbol">links_layout:</span> inline</div><div class="line"><span class="symbol">links:</span></div><div class="line">  优设: http:<span class="comment">//www.uisdc.com/</span></div><div class="line">  张鑫旭: http:<span class="comment">//www.zhangxinxu.com/</span></div><div class="line">  Web前端导航: http:<span class="comment">//www.alloyteam.com/nav/</span></div><div class="line">  前端书籍资料: http:<span class="comment">//www.36zhen.com/t?id=3448</span></div><div class="line">  百度前端技术学院: http:<span class="comment">//ife.baidu.com/</span></div><div class="line">  google前端开发基础: http:<span class="comment">//wf.uisdc.com/cn/</span></div></pre></td></tr></table></figure><h1 id="30-自定义鼠标样式"><a href="#30-自定义鼠标样式" class="headerlink" title="30. 自定义鼠标样式"></a>30. 自定义鼠标样式</h1><p>打开<code>themes/next/source/css/_custom/custom.styl</code>,在里面写下如下代码</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 鼠标样式</span></div><div class="line">  * &#123;</div><div class="line">      <span class="attribute">cursor</span>: url(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword2.ico"</span>),auto<span class="meta">!important</span></div><div class="line">  &#125;</div><div class="line">  <span class="selector-pseudo">:active</span> &#123;</div><div class="line">      <span class="attribute">cursor</span>: url(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword1.ico"</span>),auto<span class="meta">!important</span></div><div class="line">  &#125;</div></pre></td></tr></table></figure><p>其中 url 里面必须是 ico 图片，ico 图片可以上传到网上（我是使用七牛云图床），然后获取外链，复制到 url 里就行了</p><hr><h1 id="31-为博客加上萌萌的宠物"><a href="#31-为博客加上萌萌的宠物" class="headerlink" title="31.为博客加上萌萌的宠物"></a>31.为博客加上萌萌的宠物</h1><p><strong>实现效果图</strong><br><img src="http://ohggtqwxx.bkt.clouddn.com/15006365382590.jpg" alt=""></p><p><strong>具体实现方法</strong><br>在终端切换到你的博客的路径里，然后输入如下代码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> -<span class="keyword">save</span> hexo-helper-live2d</div></pre></td></tr></table></figure><p>然后打开<code>Hexo/blog/themes/next/layout</code><br>的<code>_layout.swig</code>,将下面代码放到<code>&lt;/body&gt;</code>之前：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; live2d() &#125;&#125;</div></pre></td></tr></table></figure><p>然后在在 <code>hexo</code> 的 <code>_config.yml</code>中添加参数：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">live2d:</span></div><div class="line"><span class="symbol">  model:</span> wanko</div><div class="line"><span class="symbol">  bottom:</span> <span class="number">-30</span></div></pre></td></tr></table></figure><p>然后hexo clean ，hexo g ，hexo d 就可以看到了。</p><p><strong>下面是一些model，可以换不同的宠物</strong></p><ul><li>model 模型名称 默认值: z16<ul><li>Gantzert_Felixander</li><li>Epsilon2.1</li><li>haru</li><li>miku</li><li>ni-j</li><li>nico</li><li>nito</li><li>nipsilon</li><li>nietzsche</li><li>shizuku</li><li>tsumiki</li><li>wanko</li><li>z16</li><li>hibiki</li><li>koharu</li><li>haruto</li><li>Unitychan</li><li>tororo</li><li>hijiki</li></ul></li><li>width 宽度 默认值: 150</li><li>height 高度 默认值： 300</li><li>className <code>&lt;canvas&gt;</code>元素的类名 默认值： live2d</li><li>id <code>&lt;canvas&gt;</code> 元素的id 默认值： live2dcanvas</li><li>bottom <code>&lt;canvas&gt;</code> 元素的底部偏移 默认值： -20 如果嫌模型位置不正确 可以调整这个参数</li></ul><p><del><strong>用这个有缺点，如果是在手机上看的话，感觉不是很好，宠物一直挡着文字😂😂，还有就是加载有点慢</strong></del></p><p><img src="http://ohggtqwxx.bkt.clouddn.com/15006388832427.jpg" alt=""></p><blockquote><p>（感谢<a href="https://segmentfault.com/u/gengxuelei" target="_blank" rel="external">Layne</a>网友的提醒，目前手机上显示宠物的问题已经解决，如果不想在手机上显示宠物的话，修改主题配置文件，改为如下：）</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">live2d:</span></div><div class="line"><span class="attr">  model:</span> wanko</div><div class="line"><span class="attr">  bottom:</span> <span class="bullet">-30</span></div><div class="line"><span class="attr">  mobileShow:</span> <span class="literal">false</span></div></pre></td></tr></table></figure><blockquote><p>注意！如果你在 hexo d 的时候出现我下面这个问题<br><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fhrqw92685j31dk0q4grl.jpg" alt=""><br>你可以这样，首先删除hexo 下面的.deploy_git文件夹，然后运行</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --<span class="keyword">global</span> core.autocrlf <span class="literal">false</span></div></pre></td></tr></table></figure><blockquote><p>重新 hexo clean,hexo g,hexo d就行了</p></blockquote><hr><h1 id="32-DaoVoice-在线联系"><a href="#32-DaoVoice-在线联系" class="headerlink" title="32.DaoVoice 在线联系"></a>32.DaoVoice 在线联系</h1><p><strong>实现效果图</strong></p><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-18-053222.png" alt=""></p><p><strong>具体实现方法</strong></p><p>首先在 <a href="https://account.daocloud.io/signin" target="_blank" rel="external">daovoice</a> 注册账号,<a href="http://dashboard.daovoice.io/get-started?invite_code=0f81ff2f" target="_blank" rel="external">邀请码</a>是<code>0f81ff2f</code>，注册完成后会得到一个 app_id :</p><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-18-054308.png" alt=""><br>记下这个 app_id的值，然后打开<code>/themes/next/layout/_partials/head.swig</code>,写下如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.daovoice %&#125;</span><span class="xml"></span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">"script"</span>,(<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/0f81ff2f.js"</span>,<span class="string">"daovoice"</span>)</div><div class="line">  daovoice(<span class="string">'init'</span>, &#123;</div><div class="line">      <span class="attr">app_id</span>: <span class="string">"</span><span class="template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span><span class="xml"><span class="undefined">"</span></span></div><div class="line">    &#125;);</div><div class="line">  daovoice('update');</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-18-054603.png" alt=""></p><p>接着打开<strong>主题配置文件</strong>，在最后写下如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Online contact </span></div><div class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="attr">daovoice_app_id:</span> 这里填你的刚才获得的 app_id</div></pre></td></tr></table></figure><p>重新 hexo g ，hexo s 就能看到效果了。</p><blockquote><p>安装成功后可以在DaoVoice 控制台上的聊天设置里设置聊天窗口样式，附上我的设置</p></blockquote><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-18-055639.png" alt=""></p><hr><h1 id="33-点击爆炸效果"><a href="#33-点击爆炸效果" class="headerlink" title="33.点击爆炸效果"></a>33.点击爆炸效果</h1><p><strong>实现效果图</strong></p><p><img src="http://ohggtqwxx.bkt.clouddn.com/2017-12-18-084649.png" alt=""></p><p><strong>实现方法</strong></p><p>跟那个红心是差不多的，首先在<code>themes/next/source/js/src</code>里面建一个叫fireworks.js的文件，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</div></pre></td></tr></table></figure><p>打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.fireworks %&#125;</span><span class="xml"></span></div><div class="line">   <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </div><div class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/fireworks.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Fireworks</span></div><div class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p>完😀</p><hr><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><blockquote><p>感谢大神们的文章，真的学到了许多，有些忘了记录下来，在这里由衷的感谢。虽然比较折腾，但是确实满满的成就感，Road endless its long and far, I will seek up and down！</p></blockquote><p>欢迎访问<a href="http://shenzekun.cn/" target="_blank" rel="external">我的博客</a></p><hr><h4 id="参考的文章："><a href="#参考的文章：" class="headerlink" title="参考的文章："></a>参考的文章：</h4><ol><li><a href="http://blog.csdn.net/MasterAnt_D/article/details/56839222" target="_blank" rel="external">http://blog.csdn.net/MasterAnt_D/article/details/56839222</a></li><li><a href="http://zidingyi4qh.com/2017/04/27/NexT%E5%BA%95%E9%83%A8logo%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/" target="_blank" rel="external">http://zidingyi4qh.com/2017/04/27/NexT%E5%BA%95%E9%83%A8logo%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/</a></li><li><a href="https://fuyis.me/2017/01/25/Hexo-theme-next-and-optimized-configuration/" target="_blank" rel="external">https://fuyis.me/2017/01/25/Hexo-theme-next-and-optimized-configuration/</a></li><li><a href="http://www.vitah.net/posts/20f300cc/" target="_blank" rel="external">http://www.vitah.net/posts/20f300cc/</a></li><li><a href="http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="external">http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</a></li><li><a href="https://chanshiyu.com/2017/11/24/%E5%8F%98%E5%BD%A2%E8%AE%B0%20%E2%97%8F%20NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/" target="_blank" rel="external">https://chanshiyu.com/2017/11/24/%E5%8F%98%E5%BD%A2%E8%AE%B0%20%E2%97%8F%20NexT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</a></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;看到有些next主题的网站很炫酷，那么是怎么配置的呢？接下来我会讲一讲如何实现一些炫酷的效果&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.shenzekun.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.shenzekun.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>前端小项目：使用canvas绘画哆啦A梦</title>
    <link href="http://www.shenzekun.cn/%E5%89%8D%E7%AB%AF%E5%B0%8F%E9%A1%B9%E7%9B%AE%EF%BC%9A%E4%BD%BF%E7%94%A8canvas%E7%BB%98%E7%94%BB%E5%93%86%E5%95%A6A%E6%A2%A6.html"/>
    <id>http://www.shenzekun.cn/前端小项目：使用canvas绘画哆啦A梦.html</id>
    <published>2017-05-22T14:53:53.000Z</published>
    <updated>2017-11-12T23:54:48.472Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>最近在学canvas元素,<code>&lt;canvas&gt;</code>标签只是图形容器，必须使用js来绘制图形。为了增强对canvas元素的理解,于是用canvas画了一个哆啦A梦来</p></blockquote><a id="more"></a><p><strong>要实现的效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-24ab4e6cda048199.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="哆啦A梦"></p><blockquote><p><a href="https://shenzekun.github.io/doraemon/Doraemon.html" target="_blank" rel="external">在线预览</a></p></blockquote><p>要想绘画出这个哆啦a梦首先要掌握以下一些函数：</p><ul><li><a href="http://www.365mini.com/page/html5-canvas-arcto.htm" target="_blank" rel="external">arcTo()</a></li><li><a href="http://www.365mini.com/page/html5-canvas-circle.htm" target="_blank" rel="external">canvas绘制圆形或弧线</a></li><li><a href="http://www.w3school.com.cn/tags/canvas_beziercurveto.asp" target="_blank" rel="external">bezierCurveTo()</a></li><li><a href="http://www.w3school.com.cn/tags/canvas_quadraticcurveto.asp" target="_blank" rel="external">quadraticCurveTo()</a></li></ul><p>开始绘画！！</p><p>首先我们需要创建一个400*600的画布，代码如下:<br></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">canvas</span> id=<span class="string">"doraemon"</span> <span class="attribute">width</span>=<span class="string">"400"</span> height=<span class="string">"600"</span>&gt;&lt;/canvas&gt;</div></pre></td></tr></table></figure><p></p><p>接着定义一个div，用来显示坐标<br></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"put"</span> style=<span class="string">"width: 50px"</span> height=<span class="string">"20px"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure><p></p><p>接着我写了一个显示坐标的函数，可以用来看大概画到哪个点：<br></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function">function <span class="title">zuobiao</span>(<span class="params"><span class="keyword">event</span></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> x = <span class="keyword">event</span>.clientX;</div><div class="line">        <span class="keyword">var</span> y = <span class="keyword">event</span>.clientY;</div><div class="line">        <span class="keyword">var</span> <span class="keyword">out</span> = document.getElementById(<span class="string">"put"</span>);</div><div class="line">        <span class="keyword">out</span>.innerHTML = <span class="string">"x:"</span> + x + <span class="string">" y:"</span> + y;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p></p><p>然后getContext() 方法返回一个用于在画布上绘图的环境。<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cxt = <span class="built_in">document</span>.getElementById(<span class="string">'doraemon'</span>).getContext(<span class="string">'2d'</span>);</div></pre></td></tr></table></figure><p></p><p>接着开始画头部:<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();<span class="comment">//起始路径</span></div><div class="line">cxt.lineWidth = <span class="number">1</span>;<span class="comment">//线宽度为1</span></div><div class="line">cxt.strokeStyle = '#<span class="number">000</span>';<span class="comment">//笔触的颜色</span></div><div class="line">cxt.arc(<span class="number">200</span>, <span class="number">175</span>, <span class="number">175</span>, <span class="number">0.7</span> * Math.<span class="literal">PI</span>, <span class="number">0.3</span> * Math.<span class="literal">PI</span>);<span class="comment">//绘制弧，中心点（200，175），半径175</span></div><div class="line">cxt.fillStyle = '#<span class="number">0</span>bb0da';<span class="comment">//设置填充时的颜色</span></div><div class="line">cxt.fill();<span class="comment">//填充颜色</span></div><div class="line">cxt.stroke();<span class="comment">//绘制路径</span></div></pre></td></tr></table></figure><p></p><p>头部如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-14f0c90711c3b8d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="头部"></p><p>接着绘画出脸部：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.moveTo(<span class="number">110</span>, <span class="number">110</span>);<span class="comment">//将路径移到点（110，110），不创建线条</span></div><div class="line">cxt.quadraticCurveTo(<span class="number">-10</span>, <span class="number">200</span>, <span class="number">120</span>, <span class="number">315</span>);<span class="comment">//创建二次贝塞尔曲线,控制点(-10,200),结束点(120,315)</span></div><div class="line">cxt.lineTo(<span class="number">280</span>, <span class="number">315</span>);<span class="comment">//添加一个新点，然后在画布中创建从（110，110）到（280，315）的线条</span></div><div class="line">cxt.quadraticCurveTo(<span class="number">410</span>, <span class="number">210</span>, <span class="number">290</span>, <span class="number">110</span>);</div><div class="line">cxt.lineTo(<span class="number">110</span>, <span class="number">110</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>脸部如下：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-3b275a0c5b472130.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="脸部"></p><p>接着绘画眼睛：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.lineWidth = <span class="number">1</span>;</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.moveTo(<span class="number">110</span>, <span class="number">110</span>);</div><div class="line">cxt.bezierCurveTo(<span class="number">110</span>, <span class="number">25</span>, <span class="number">200</span>, <span class="number">25</span>, <span class="number">200</span>, <span class="number">100</span>);<span class="comment">//创建三次贝塞尔曲线,控制点1(110,25),控制点2(200,25),结束点(200,100)，也就是画左上半椭圆</span></div><div class="line">cxt.bezierCurveTo(<span class="number">200</span>, <span class="number">175</span>, <span class="number">110</span>, <span class="number">175</span>, <span class="number">110</span>, <span class="number">100</span>);<span class="comment">//画左下半椭圆</span></div><div class="line">cxt.moveTo(<span class="number">200</span>, <span class="number">100</span>);</div><div class="line">cxt.bezierCurveTo(<span class="number">200</span>, <span class="number">25</span>, <span class="number">290</span>, <span class="number">25</span>, <span class="number">290</span>, <span class="number">100</span>);</div><div class="line">cxt.bezierCurveTo(<span class="number">290</span>, <span class="number">175</span>, <span class="number">200</span>, <span class="number">175</span>, <span class="number">200</span>, <span class="number">100</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-951b6edf9229d296.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="眼睛"></p><p>接着画左右眼球：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/*右眼球*/</span></div><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#<span class="number">000</span>';</div><div class="line">cxt.arc(<span class="number">230</span>, <span class="number">130</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div><div class="line"><span class="comment">/*左眼球*/</span></div><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#<span class="number">000</span>';</div><div class="line">cxt.arc(<span class="number">170</span>, <span class="number">130</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>左右眼球：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-bcc8fa1d28b86a65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="左右眼球"></p><p>接着画鼻子：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.arc(<span class="number">200</span>, <span class="number">165</span>, <span class="number">25</span>, <span class="number">0</span>, <span class="number">2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fillStyle = '#d05823';</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>鼻子：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-c435787e2ec2ca59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="鼻子"></p><p>接着画胡须：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//左胡须</span></div><div class="line">cxt.beginPath();</div><div class="line">cxt.moveTo(<span class="number">80</span>, <span class="number">175</span>);</div><div class="line">cxt.lineTo(<span class="number">150</span>, <span class="number">195</span>);</div><div class="line">cxt.moveTo(<span class="number">80</span>, <span class="number">200</span>);</div><div class="line">cxt.lineTo(<span class="number">150</span>, <span class="number">205</span>);</div><div class="line">cxt.moveTo(<span class="number">80</span>, <span class="number">225</span>);</div><div class="line">cxt.lineTo(<span class="number">150</span>, <span class="number">215</span>);</div><div class="line"><span class="comment">//中部胡须</span></div><div class="line">cxt.moveTo(<span class="number">200</span>, <span class="number">195</span>);</div><div class="line">cxt.lineTo(<span class="number">200</span>, <span class="number">290</span>);</div><div class="line"><span class="comment">//右胡须</span></div><div class="line">cxt.moveTo(<span class="number">250</span>, <span class="number">195</span>);</div><div class="line">cxt.lineTo(<span class="number">320</span>, <span class="number">175</span>);</div><div class="line">cxt.moveTo(<span class="number">250</span>, <span class="number">205</span>);</div><div class="line">cxt.lineTo(<span class="number">320</span>, <span class="number">200</span>);</div><div class="line">cxt.moveTo(<span class="number">250</span>, <span class="number">215</span>);</div><div class="line">cxt.lineTo(<span class="number">320</span>, <span class="number">225</span>);</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>胡须:</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-dd9fdcb1b60c2fce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="胡须"></p><p>接着画嘴：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cxt.moveTo(<span class="number">80</span>, <span class="number">240</span>);</div><div class="line">cxt.quadraticCurveTo(<span class="number">200</span>, <span class="number">350</span>, <span class="number">320</span>, <span class="number">240</span>);</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>嘴：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-c8156d2154c31ab6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="嘴"></p><p>接下来画围巾：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.moveTo(<span class="number">96</span>, <span class="number">316</span>);</div><div class="line">cxt.lineTo(<span class="number">305</span>, <span class="number">316</span>);</div><div class="line">cxt.lineTo(<span class="number">320</span>, <span class="number">316</span>);</div><div class="line">cxt.arcTo(<span class="number">330</span>, <span class="number">316</span>, <span class="number">330</span>, <span class="number">326</span>, <span class="number">10</span>);<span class="comment">//在画布上创建介于两个切线之间的弧，起点坐标为(330,316),终点坐标为(330,326),半径为10</span></div><div class="line">cxt.lineTo(<span class="number">330</span>, <span class="number">336</span>);</div><div class="line">cxt.arcTo(<span class="number">330</span>, <span class="number">346</span>, <span class="number">305</span>, <span class="number">346</span>, <span class="number">10</span>);</div><div class="line">cxt.lineTo(<span class="number">81</span>, <span class="number">346</span>);</div><div class="line">cxt.arcTo(<span class="number">71</span>, <span class="number">346</span>, <span class="number">71</span>, <span class="number">336</span>, <span class="number">10</span>);</div><div class="line">cxt.lineTo(<span class="number">71</span>, <span class="number">326</span>);</div><div class="line">cxt.arcTo(<span class="number">71</span>, <span class="number">316</span>, <span class="number">81</span>, <span class="number">316</span>, <span class="number">10</span>);</div><div class="line">cxt.lineTo(<span class="number">96</span>, <span class="number">316</span>);</div><div class="line">cxt.fillStyle = '#b13209';</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>围巾：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-00f257d5f26efa52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="围巾"></p><p>接着画衣服：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#<span class="number">0</span>bb0da';</div><div class="line">cxt.moveTo(<span class="number">80</span>, <span class="number">346</span>);</div><div class="line"><span class="comment">//左衣服</span></div><div class="line">cxt.lineTo(<span class="number">26</span>, <span class="number">406</span>);</div><div class="line">cxt.lineTo(<span class="number">65</span>, <span class="number">440</span>);</div><div class="line">cxt.lineTo(<span class="number">85</span>, <span class="number">418</span>);</div><div class="line">cxt.lineTo(<span class="number">85</span>, <span class="number">528</span>);</div><div class="line">cxt.lineTo(<span class="number">185</span>, <span class="number">528</span>);</div><div class="line"><span class="comment">//右衣服</span></div><div class="line">cxt.lineTo(<span class="number">315</span>, <span class="number">528</span>);</div><div class="line">cxt.lineTo(<span class="number">315</span>, <span class="number">418</span>);</div><div class="line">cxt.lineTo(<span class="number">337</span>, <span class="number">440</span>);</div><div class="line">cxt.lineTo(<span class="number">374</span>, <span class="number">406</span>);</div><div class="line">cxt.lineTo(<span class="number">320</span>, <span class="number">346</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>衣服：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-4c8e54b75228ffd3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="衣服"><br>接着画手：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//左手</span></div><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.arc(<span class="number">37</span>, <span class="number">433</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div><div class="line"><span class="comment">//右手</span></div><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.arc(<span class="number">363</span>, <span class="number">433</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>手：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-d49f6888ee45e0e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="手"></p><p>接着画肚：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.arc(<span class="number">200</span>, <span class="number">400</span>, <span class="number">91</span>, <span class="number">1.8</span> * Math.<span class="literal">PI</span>, <span class="number">1.2</span> * Math.<span class="literal">PI</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>肚：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-2c51ca97eeec8c11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="肚"></p><p>接着画小口袋<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cxt.beginPath();</div><div class="line">cxt.fillStyle = '#fff';</div><div class="line">cxt.moveTo(<span class="number">130</span>, <span class="number">394</span>);</div><div class="line">cxt.lineTo(<span class="number">270</span>, <span class="number">394</span>);</div><div class="line">cxt.moveTo(<span class="number">130</span>, <span class="number">394</span>);</div><div class="line">cxt.bezierCurveTo(<span class="number">130</span>, <span class="number">490</span>, <span class="number">270</span>, <span class="number">490</span>, <span class="number">270</span>, <span class="number">394</span>);</div><div class="line">cxt.fill();</div><div class="line">cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>小口袋：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-82fcde37b775d0ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="小口袋"></p><p>最后画两只脚以及两只脚的的空隙：<br></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*两只脚的空隙*/</span></div><div class="line">  cxt.beginPath();</div><div class="line">  cxt.fillStyle = '#fff';</div><div class="line">  cxt.arc(<span class="number">200</span>, <span class="number">529</span>, <span class="number">20</span>,Math.<span class="literal">PI</span>, <span class="number">0</span>);</div><div class="line">  cxt.fill();</div><div class="line">  cxt.stroke();</div><div class="line">  <span class="comment">/*脚*/</span></div><div class="line">  <span class="comment">//左脚</span></div><div class="line">  cxt.beginPath();</div><div class="line">  cxt.fillStyle='#fff';</div><div class="line">  cxt.moveTo(<span class="number">180</span>,<span class="number">528</span>);</div><div class="line">  cxt.lineTo(<span class="number">72</span>,<span class="number">528</span>);</div><div class="line">  cxt.bezierCurveTo(<span class="number">52</span>,<span class="number">528</span>,<span class="number">52</span>,<span class="number">558</span>,<span class="number">72</span>,<span class="number">558</span>);</div><div class="line">  cxt.lineTo(<span class="number">180</span>,<span class="number">558</span>);</div><div class="line">  cxt.moveTo(<span class="number">180</span>,<span class="number">558</span>);</div><div class="line">  cxt.bezierCurveTo(<span class="number">200</span>,<span class="number">558</span>,<span class="number">200</span>,<span class="number">528</span>,<span class="number">180</span>,<span class="number">528</span>);</div><div class="line">  cxt.fill();</div><div class="line">  cxt.stroke();</div><div class="line">  <span class="comment">//右脚</span></div><div class="line">  cxt.beginPath();</div><div class="line">  cxt.fillStyle='#fff';</div><div class="line">  cxt.moveTo(<span class="number">220</span>,<span class="number">528</span>);</div><div class="line">  cxt.lineTo(<span class="number">328</span>,<span class="number">528</span>);</div><div class="line">  cxt.bezierCurveTo(<span class="number">348</span>,<span class="number">528</span>,<span class="number">348</span>,<span class="number">558</span>,<span class="number">328</span>,<span class="number">558</span>);</div><div class="line">  cxt.lineTo(<span class="number">220</span>,<span class="number">558</span>);</div><div class="line">  cxt.moveTo(<span class="number">220</span>,<span class="number">558</span>);</div><div class="line">  cxt.bezierCurveTo(<span class="number">200</span>,<span class="number">558</span>,<span class="number">200</span>,<span class="number">528</span>,<span class="number">220</span>,<span class="number">528</span>);</div><div class="line">  cxt.fill();</div><div class="line">  cxt.stroke();</div></pre></td></tr></table></figure><p></p><p>完成了︿(￣︶￣)︿<br><img src="http://upload-images.jianshu.io/upload_images/5308475-24ab4e6cda048199.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="哆啦A梦"></p><p>完整代码请点击：<a href="https://github.com/shenzekun/doraemon/blob/master/Doraemon.html" target="_blank" rel="external">哆啦A梦</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;最近在学canvas元素,&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;标签只是图形容器，必须使用js来绘制图形。为了增强对canvas元素的理解,于是用canvas画了一个哆啦A梦来&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="canvas" scheme="http://www.shenzekun.cn/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>有关HTML常被问到的知识点</title>
    <link href="http://www.shenzekun.cn/%E6%9C%89%E5%85%B3HTML%E5%B8%B8%E8%A2%AB%E9%97%AE%E5%88%B0%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9.html"/>
    <id>http://www.shenzekun.cn/有关HTML常被问到的知识点.html</id>
    <published>2017-05-22T14:47:36.000Z</published>
    <updated>2017-11-12T23:54:48.475Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="HTML、XML、XHTML-有什么区别"><a href="#HTML、XML、XHTML-有什么区别" class="headerlink" title="HTML、XML、XHTML 有什么区别?"></a>HTML、XML、XHTML 有什么区别?</h2><a id="more"></a><blockquote><ol><li><strong>HTML</strong>即是超文本标记语言（Hyper Text Markup Language），是<strong>最早</strong>写网页的语言，但是由于时间早，规范不是很好，大小写混写且编码不规范,是语法较为松散的、不严格的Web语言</li><li><strong>XHTML</strong>是升级版的html（Extensible Hyper Text Markup Language），对html进行了规范，编码更加严谨纯洁，也是一种过渡语言，html向xml过渡的语言。实际上XHTML 与 HTML 4.01 标准没有太多的不同。</li><li><strong>XML</strong>是可扩展标记语言（Extensible Markup Language），是一种跨平台语言，编码更自由，可以自由创建标签（<br>比如像下面这样创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don't forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></div></pre></td></tr></table></figure></li></ol></blockquote><p>），主要用于存储数据和结构，可扩展</p><h2 id="HTML和XML的区别："><a href="#HTML和XML的区别：" class="headerlink" title="HTML和XML的区别："></a>HTML和XML的区别：</h2><ol><li>XML 被设计用来传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观。</li><li>HTML 旨在显示信息，而 XML 旨在传输信息。</li><li>XML在定义标记时区分大小写，而HTML标记不区分大小写。</li></ol><h2 id="HTML和XHTML的区别："><a href="#HTML和XHTML的区别：" class="headerlink" title="HTML和XHTML的区别："></a>HTML和XHTML的区别：</h2><ol><li><p>XHTML 元素必须被正确地嵌套。<br>例如：XHTML必须要这样<code>&lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/i&gt;&lt;/b&gt;</code><br>而在 HTML 中，某些元素可以像这样彼此不正确地嵌套：<br><code>&lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/b&gt;&lt;/i&gt;</code></p></li><li><p>XHTML 元素必须被关闭。<br><em>例如</em><code>&lt;p&gt;This is a paragraph&lt;/p&gt;</code>===&gt;&gt;<em>这是正确的</em><br><code>&lt;p&gt;This is a paragraph</code>===&gt;&gt;<em>这是错误的</em></p></li><li><p>标签名必须用小写字母。<br><em>例如: </em><code>&lt;p&gt;This is a paragraph&lt;/p&gt;</code>==&gt;&gt;<em>这是正确的</em><br><code>&lt;P&gt;This is a paragraph&lt;/P&gt;</code>===&gt;&gt;<em>这是错误的</em></p></li><li><p>XHTML 文档必须拥有根元素。<br>所有的 XHTML 元素必须被嵌套于 <code>&lt;html&gt;</code> 根元素中</p></li></ol><hr><h2 id="怎样理解-HTML-语义化"><a href="#怎样理解-HTML-语义化" class="headerlink" title="怎样理解 HTML 语义化?"></a>怎样理解 HTML 语义化?</h2><blockquote><p>HTML语义化是让大家直观的认识标签(markup)和属性(attribute)的用途和作用，选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析，并且便于团队开发和维护。</p></blockquote><hr><h2 id="怎样理解内容与样式分离的原则"><a href="#怎样理解内容与样式分离的原则" class="headerlink" title="怎样理解内容与样式分离的原则?"></a>怎样理解内容与样式分离的原则?</h2><blockquote><p>写 HTML 的时候先不管样式, 重点放在HTML的结构和语义化上，让 HTML 能体现页面结构或者内容。之后再去写样式。<br>写 JS 的时候，尽量不要用 JS 去直接操作样式，而是通过给元素添加删除class来控制样式变化。<br>文档结构与文档样式的分离可以确保网页的平稳退化，也让内容和样式在可以分开独立编辑。</p></blockquote><hr><h2 id="有哪些常见的meta标签"><a href="#有哪些常见的meta标签" class="headerlink" title="有哪些常见的meta标签?"></a>有哪些常见的meta标签?</h2><blockquote><ul><li>指定字符集<br><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></li><li>向搜索引擎说明你的网页的关键词<br><code>&lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;</code></li><li>告诉搜索引擎你的站点的主要内容<br><code>&lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;</code></li><li>告诉搜索引擎你的站点的制作的作者<br><code>&lt;meta name=&quot;author&quot; content=&quot;your name&quot;&gt;</code></li><li>响应式页面<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code></li><li>定时让网页在3秒内跳转到mozilla首页(<code>http-equiv</code> 属性为名称/值对提供了名称。并指示服务器在发送实际的文档之前先在要传送给浏览器的 MIME 文档头部包含名称/值对。)<br><code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;3&quot; url=https://www.mozilla.org&quot;&gt;</code></li><li>如果安装了GCF (Google Chrome Frame)，则使用GCF来渲染页面 (“chrome=1”), 如果没有安装GCF，则使用最高版本的IE内核进行渲染 (“IE=edge”)。<code>X-UA-Compatible</code>(浏览器采取何种版本渲染当前页面)<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;</code></li><li>浏览器的内核控制<br><code>&lt;meta name=&quot;renderer&quot; content=&quot;webkit|ie-comp|ie-stand&quot;&gt;</code></li></ul></blockquote><hr><h2 id="文档声明的作用"><a href="#文档声明的作用" class="headerlink" title="文档声明的作用?"></a>文档声明的作用?</h2><blockquote><p>文档声明用来告知浏览器当前文档所使用的类型，让浏览器解析器知道要用什么规范来解析文档。</p></blockquote><hr><h2 id="严格模式和混杂模式指什么"><a href="#严格模式和混杂模式指什么" class="headerlink" title="严格模式和混杂模式指什么?"></a>严格模式和混杂模式指什么?</h2><blockquote><p>在严格模式中，浏览器以其支持的最高标准呈现页面。<br>在混杂模式中，又称怪异模式或兼容模式，浏览器用自己的方式解析代码，页面以一种比较宽松的向后兼容的方式显示。混杂模式通常模拟老式浏览器的行为以防止老站点无法工作。</p></blockquote><hr><h2 id="lt-doctype-html-gt-的作用"><a href="#lt-doctype-html-gt-的作用" class="headerlink" title="&lt;!doctype html&gt; 的作用?"></a>&lt;!doctype html&gt; 的作用?</h2><blockquote><p>它是html5标准网页声明,告诉浏览器用最新的 HTML5标准来解析渲染页面；如果不写，浏览器就会进入混杂模式。</p></blockquote><hr><h2 id="浏览器乱码的原因是什么？如何解决？"><a href="#浏览器乱码的原因是什么？如何解决？" class="headerlink" title="浏览器乱码的原因是什么？如何解决？"></a>浏览器乱码的原因是什么？如何解决？</h2><blockquote><p>乱码产生的<strong>根本原因</strong>是保存的编码格式和浏览器解析时的解码格式不匹配导致的。<br><strong>解决方式：</strong> 写代码的时候在html 的 <code>&lt;head&gt;</code>里添加<code>&lt;meta charset=&#39;xxx&#39;&gt;</code>并且保存的时候仍选择同样的编码方式。</p></blockquote><hr><h2 id="常见的浏览器有哪些？什么内核？"><a href="#常见的浏览器有哪些？什么内核？" class="headerlink" title="常见的浏览器有哪些？什么内核？"></a>常见的浏览器有哪些？什么内核？</h2><blockquote><ul><li><strong>Internet explorer</strong> 使用的是<strong>Trident</strong></li><li><strong>Firefox</strong>使用的是<strong>Gecko</strong>。</li><li><strong>opera</strong>之前使用的是<strong>Presto</strong>，后来用<strong>Blink</strong></li><li>苹果的<strong>Safari</strong>，谷歌的<strong>Chrome</strong>使用的是<strong>WebKit</strong>，还有国产的大部分双核浏览器其中一核就是<strong>WebKit</strong>。</li></ul></blockquote><hr><h2 id="列出常见的标签，并简单介绍这些标签用在什么场景？"><a href="#列出常见的标签，并简单介绍这些标签用在什么场景？" class="headerlink" title="列出常见的标签，并简单介绍这些标签用在什么场景？"></a>列出常见的标签，并简单介绍这些标签用在什么场景？</h2><table><thead><tr><th>标签</th><th style="text-align:center">运用场景</th></tr></thead><tbody><tr><td><code>&lt;html&gt;</code></td><td style="text-align:center">HTML 页面的根元素</td></tr><tr><td><code>&lt;body&gt;</code></td><td style="text-align:center">文档的内容</td></tr><tr><td><code>&lt;head&gt;</code></td><td style="text-align:center">用于定义文档的头部</td></tr><tr><td><code>&lt;meta&gt;</code></td><td style="text-align:center">提供了元数据.元数据也不显示在页面上，被浏览器解析</td></tr><tr><td><code>&lt;title&gt;</code></td><td style="text-align:center">文档的标题</td></tr><tr><td><code>&lt;h1&gt;-&lt;h6&gt;</code></td><td style="text-align:center">定义了一级标题到六级标题，标题字体大小逐渐减弱</td></tr><tr><td><code>&lt;p&gt;</code></td><td style="text-align:center">定义一个段落</td></tr><tr><td><code>&lt;a&gt;</code></td><td style="text-align:center">网页链接</td></tr><tr><td><code>&lt;div&gt;</code></td><td style="text-align:center">块级元素，它可用于组合其他 HTML 元素的容器,没有特定的含义</td></tr><tr><td><code>&lt;span&gt;</code></td><td style="text-align:center">内联元素，也没有特定的含义，可用作文本的容器</td></tr><tr><td><code>&lt;u&gt;</code></td><td style="text-align:center">下划线</td></tr><tr><td><code>&lt;em&gt;</code></td><td style="text-align:center">强调文本</td></tr><tr><td><code>&lt;strong&gt;</code></td><td style="text-align:center">加重文本</td></tr><tr><td><code>&lt;ol&gt;</code></td><td style="text-align:center">有序列表</td></tr><tr><td><code>&lt;ul&gt;</code></td><td style="text-align:center">无序列表</td></tr><tr><td><code>&lt;li&gt;</code></td><td style="text-align:center">定义列表项目</td></tr><tr><td><code>&lt;img&gt;</code></td><td style="text-align:center">图片</td></tr><tr><td><code>&lt;br &gt;</code></td><td style="text-align:center">换行</td></tr><tr><td><code>&lt;input&gt;</code></td><td style="text-align:center">定义输入控件</td></tr><tr><td><code>&lt;i&gt;</code></td><td style="text-align:center">斜体字</td></tr><tr><td><code>&lt;table&gt;</code></td><td style="text-align:center">定义表</td></tr><tr><td><code>&lt;tr&gt;</code></td><td style="text-align:center">定义表格中的行</td></tr><tr><td><code>&lt;td&gt;</code></td><td style="text-align:center">定义表中的单元格</td></tr><tr><td><code>&lt;th&gt;</code></td><td style="text-align:center">定义表格的表头</td></tr><tr><td><code>&lt;tbody&gt;</code></td><td style="text-align:center">定义表格的主体</td></tr><tr><td><code>&lt;tfoot&gt;</code></td><td style="text-align:center">定义表格的页脚</td></tr><tr><td><code>&lt;hr&gt;</code></td><td style="text-align:center">创建一条水平线</td></tr><tr><td><code>&lt;iframe&gt;</code></td><td style="text-align:center">定义内联框架</td></tr><tr><td><code>&lt;cite&gt;</code></td><td style="text-align:center">定义作品的标题</td></tr><tr><td><code>&lt;button&gt;</code></td><td style="text-align:center">按钮</td></tr><tr><td><code>&lt;b&gt;</code></td><td style="text-align:center">定义粗体文本</td></tr><tr><td><code>&lt;form&gt;</code></td><td style="text-align:center">定义用于用户输入的HTML表单</td></tr><tr><td><code>&lt;caption&gt;</code></td><td style="text-align:center">定义表标题</td></tr><tr><td><code>&lt;footer&gt;</code></td><td style="text-align:center">定义文档或节的页脚</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h2 id=&quot;HTML、XML、XHTML-有什么区别&quot;&gt;&lt;a href=&quot;#HTML、XML、XHTML-有什么区别&quot; class=&quot;headerlink&quot; title=&quot;HTML、XML、XHTML 有什么区别?&quot;&gt;&lt;/a&gt;HTML、XML、XHTML 有什么区别?&lt;/h2&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.shenzekun.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="http://www.shenzekun.cn/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>解决Charles乱码问题</title>
    <link href="http://www.shenzekun.cn/%E8%A7%A3%E5%86%B3Charles%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.shenzekun.cn/解决Charles乱码问题.html</id>
    <published>2017-05-22T14:45:48.000Z</published>
    <updated>2017-11-12T23:54:48.481Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>在网上查了半天说在Info.plist文件加字符串就好了，其实没有用，下面有一个方法亲试可以解决乱码问题</p></blockquote><a id="more"></a><h2 id="安装ssl证书"><a href="#安装ssl证书" class="headerlink" title="安装ssl证书"></a>安装ssl证书</h2><p><strong>3.10版本之前的</strong>需要去<a href="http://www.charlesproxy.com/ssl.zip" target="_blank" rel="external">http://www.charlesproxy.com/ssl.zip</a> 下载 CA 证书文件，然后双击 .crt 文件，选择‘总是信任’按钮，在钥匙串访问中即可看到添加成功的证书。</p><p><strong>我是4.02版本的，在3.10版本之后的</strong>，操作如下：</p><ul><li><p>先点<strong>proxy</strong>中的<strong>macOS Proxy</strong> ，如果点击网页，Charles没有出现东西的话，<strong>把翻墙软件关了</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-a54d663becbba0de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>然后点击<strong>help</strong>中的<strong>SSL Proxying</strong>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-23376f5b87f5cebc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>点击之后在搜索框中输入Charles，出现（我是已经改好了，原来的话是红色的）：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-61b1c3be4d7b83d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>双击那个证书，改成如下图所示，然后保存：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-c6844a5e46784c51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><p>接下来点击<strong>proxy</strong>中的<strong>SSL Proxying Settings</strong>，出现如下图所示，然后点<strong>add</strong> 在Host里填 * 号 ，在Port里填443，然后点ok：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-a79e27352086fa0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/5308475-4ee2987c2d59d79d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li></ul><ul><li>接下来，你会惊奇的发现，乱码没有了\（￣︶￣）/</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;在网上查了半天说在Info.plist文件加字符串就好了，其实没有用，下面有一个方法亲试可以解决乱码问题&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://www.shenzekun.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>github博客绑定个性域名</title>
    <link href="http://www.shenzekun.cn/github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E6%80%A7%E5%9F%9F%E5%90%8D.html"/>
    <id>http://www.shenzekun.cn/github博客绑定个性域名.html</id>
    <published>2017-05-22T14:41:34.000Z</published>
    <updated>2017-11-12T23:54:48.462Z</updated>
    
    <content type="html"><![CDATA[<hr><p>首先我们先买个域名,可以在<a href="https://cn.aliyun.com/" target="_blank" rel="external">阿里云</a>购买域名，买完之后登陆阿里云的管理控制台,然后点击域名，再点击解析如下</p><a id="more"></a><p><img src="http://upload-images.jianshu.io/upload_images/5308475-4953432e1dae183e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>接下来点击添加解析，并输入以下信息（记录值不一样，第一个的记录值填你的github访问地址,如<code>shenzekun.github.io</code>,第二个填的是你的网站的ip地址，比如我原来的网站是<code>shenzekun.github.io</code>,那么就查找<code>shenzekun.github.io</code>的ip地址，网站的ip地址可以在这查<a href="http://ip.chinaz.com/" target="_blank" rel="external">ip地址</a>）</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8b27bab6a8c389d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>然后向你的 Github Pages 仓库添加一个CNAME(一定要<em>大写</em>)文件，在CNAME里面添加你的域名信息（<code>不加http://</code>），如<code>shenzekun.cn</code>,并上传到你的GitHub中</p><p>填完之后登陆你博客的github，点击setting<br><img src="http://upload-images.jianshu.io/upload_images/5308475-d73094344c7c7f6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>在这填写你的域名，点击保存即可</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-86c99fdf87c8fef8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>接下来就是等了，我的博客大概半个小时就可以看到了。😝</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;p&gt;首先我们先买个域名,可以在&lt;a href=&quot;https://cn.aliyun.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里云&lt;/a&gt;购买域名，买完之后登陆阿里云的管理控制台,然后点击域名，再点击解析如下&lt;/p&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://www.shenzekun.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>学生免费申请JetBrains许可证技巧</title>
    <link href="http://www.shenzekun.cn/%E5%AD%A6%E7%94%9F%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7JetBrains%E8%AE%B8%E5%8F%AF%E8%AF%81%E6%8A%80%E5%B7%A7.html"/>
    <id>http://www.shenzekun.cn/学生免费申请JetBrains许可证技巧.html</id>
    <published>2017-05-22T11:22:51.000Z</published>
    <updated>2017-11-12T23:54:48.474Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><p>用过JetBrain公司出的软件的人都知道，这个公司出的软件都比较好用，像webstorm，phpstrom等等，但是就是太贵了。对于学生，可以免费使用jetbrain公司的软件，那么接下来我会讲一讲如何申请免费</p></blockquote><a id="more"></a><ul><li><h2 id="学生免费申请许可证地址："><a href="#学生免费申请许可证地址：" class="headerlink" title="学生免费申请许可证地址："></a>学生免费申请许可证地址：</h2><p><a href="https://www.jetbrains.com/student/" target="_blank" rel="external">https://www.jetbrains.com/student/</a></p></li><li><h2 id="点击apply-now出现如下图："><a href="#点击apply-now出现如下图：" class="headerlink" title="点击apply now出现如下图："></a>点击<strong>apply now</strong>出现如下图：</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-023ecea6cc39f83b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></li><li><h2 id="支持的验证方法有："><a href="#支持的验证方法有：" class="headerlink" title="支持的验证方法有："></a>支持的验证方法有：</h2><ul><li><strong>邮件认证</strong>: 如果你的学校对学生有提供类似<code>@.edu</code>或者是 <code>@.edu.cn</code> 的邮箱，那么你可以通过这种方式去认证。</li><li><strong>ISIC/ITIC 认证</strong>： 这个没试过，不知道要怎么弄 —__—</li><li><strong>文档认证：</strong> 我是申请这个的，这个需要你的学生证 ===&gt;<br><strong>这里填你的学校就行了！</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-b98083bbc997b093.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><strong>Comment里面填一些你想说的话，然后点APPLY FOR FREE PRODUCTS，就申请完成了!</strong><br><img src="http://upload-images.jianshu.io/upload_images/5308475-7360994c4204383a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li></ul></li><li><h2 id="等"><a href="#等" class="headerlink" title="等"></a>等</h2><p>我是星期六申请的，星期一晚上就发邮件给我了，大约用了3天左右，如图：<br><img src="http://upload-images.jianshu.io/upload_images/5308475-4375c88f24022183.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>点 <strong>Activate Educational License</strong>就激活成功了！<br>我用<strong>phpstrom</strong>举例子<br><img src="http://upload-images.jianshu.io/upload_images/5308475-0ef3e9d44898ad7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">在这里输入你获得的许可证就能成功激活了。<br><strong>注意，许可证有效期为1年!（过期了可重新申请）</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;blockquote&gt;&lt;p&gt;用过JetBrain公司出的软件的人都知道，这个公司出的软件都比较好用，像webstorm，phpstrom等等，但是就是太贵了。对于学生，可以免费使用jetbrain公司的软件，那么接下来我会讲一讲如何申请免费&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.shenzekun.cn/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="http://www.shenzekun.cn/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>
